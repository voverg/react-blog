{"version":3,"sources":["components/UI/BasicModal/BasicModal.module.css","components/UI/BasicButton/BasicButton.module.css","components/UI/BasicInput/BasicInput.module.css","components/UI/BasicSelect/BasicSelect.module.css","components/UI/Loader/Loader.module.css","components/UI/BasicButton/index.js","components/UI/BasicButton/BasicButton.jsx","components/UI/BasicInput/index.js","components/UI/BasicInput/BasicInput.jsx","components/PostSearch.jsx","components/PostHeader.jsx","components/PostForm.jsx","components/Post.jsx","components/UI/BasicSelect/index.js","components/UI/BasicSelect/BasicSelect.jsx","components/PostSelect.jsx","components/PostList.jsx","components/PostFooter.jsx","components/UI/BasicModal/index.js","components/UI/BasicModal/BasicModal.jsx","components/UI/Loader/index.js","components/UI/Loader/Loader.jsx","API/PostService.js","utils/pages.js","hooks/usePosts.js","App.js","hooks/useFetching.js","index.js"],"names":["module","exports","BasicButton","children","props","className","classes","basicButton","BasicInput","basicInput","PostSelect","filter","setFilter","type","placeholder","value","query","onChange","event","target","PostHeader","setModal","onClick","PostSearch","style","marginBottom","PostForm","createPost","visible","useState","title","body","post","setPost","useMemo","preventDefault","newPost","id","Date","now","Post","number","removePost","BasicSelect","options","defaultValue","sortPosts","basicSelect","disabled","map","option","name","sort","selectedSort","PostList","posts","length","TransitionGroup","index","CSSTransition","timeout","classNames","PostFooter","href","rel","BasicModal","setVisible","rootClasses","basicModal","push","active","join","basicModalContent","stopPropagation","Loader","loader","PostService","limit","page","axios","get","params","_limit","_page","response","getPageCount","totalCount","Math","ceil","usePosts","sortedPosts","a","b","localeCompare","_useSortedPosts","toLowerCase","includes","App","setPosts","modal","totalPages","setTotalPages","sortedAndSearchedPosts","pagesArray","i","callback","isLoading","setIsLoading","error","setError","message","useFetching","getAll","data","headers","fetchPosts","isPostsLoading","postError","useEffect","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.079c4e76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicModal\":\"BasicModal_basicModal__2bL6e\",\"basicModalContent\":\"BasicModal_basicModalContent__35Ict\",\"active\":\"BasicModal_active__zWHkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicButton\":\"BasicButton_basicButton__258mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicInput\":\"BasicInput_basicInput__1wrLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicSelect\":\"BasicSelect_basicSelect__2gC4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1lNMe\",\"rotate\":\"Loader_rotate__2xdLR\"};","import BasicButton from './BasicButton.jsx';\n\nexport default BasicButton;\n","import React from 'react';\n\nimport classes from './BasicButton.module.css';\n\nconst BasicButton = ({children, ...props}) => {\n\n  return (\n    <button {...props} className={classes.basicButton}>\n      {children}\n    </button>\n  );\n};\n\nexport default BasicButton;\n","import BasicInput from './BasicInput.jsx';\n\nexport default BasicInput;\n","import React from 'react';\n\nimport classes from './BasicInput.module.css';\n\nconst BasicInput = (props) => {\n\n  return (\n    <input\n      className={classes.basicInput}\n      {...props}\n    />\n  );\n};\n\nexport default BasicInput;\n","import React from 'react';\n\nimport BasicInput from './UI/BasicInput';\n\nconst PostSelect = ({filter, setFilter}) => {\n\n  return (\n    <BasicInput\n      type=\"text\"\n      placeholder=\"Поиск...\"\n      value={filter.query}\n      onChange={ event => setFilter({...filter, query: event.target.value}) }\n    />\n  );\n};\n\nexport default PostSelect;\n","import React from 'react';\n\nimport BasicButton from './UI/BasicButton';\nimport PostSearch from './PostSearch.jsx';\n\nconst PostHeader = ({filter, setFilter, setModal}) => {\n\n  return (\n    <div className=\"post-header\">\n        <div className=\"post-header__nav container\">\n          <div className=\"nav-item\">\n            <BasicButton\n              onClick={() => setModal(true)}\n            >\n              Создать пост\n            </BasicButton>\n          </div>\n\n          <div className=\"nav-item\">\n            <h1 className=\"post-header__title\">Блог</h1>\n          </div>\n\n          <div className=\"nav-item\">\n            <PostSearch\n              style={{marginBottom: '2px'}}\n              filter={filter}\n              setFilter={setFilter}\n            />\n          </div>\n        </div>\n\n\n    </div>\n  );\n};\n\nexport default PostHeader;\n","import React, {useState, useMemo} from 'react';\n\nimport BasicButton from './UI/BasicButton';\nimport BasicInput from './UI/BasicInput';\n\nconst PostForm = ({createPost, visible}) => {\n  const [post, setPost] = useState({title: '', body: ''});\n\n  // Очищаем поля формы, когда она становится невидимой\n  useMemo(() => {\n    if (!visible) {\n      setPost({...post, title: '', body: ''});\n    }\n  }, [visible])\n\n\n  const addNewPost = (event) => {\n    event.preventDefault();\n    if (!post.title || !post.body) return;\n\n    const newPost = {\n      ...post,\n      id: Date.now(),\n    };\n\n    // Добавляем новый пост в массив с постами\n    createPost(newPost);\n\n    // Очистка полей формы после создания поста\n    // setPost({...post, title: '', body: ''});\n  };\n\n  return (\n    <form className=\"post-form\">\n      <h2 className=\"post-form__title\">Добавить новый пост</h2>\n      <BasicInput\n        type=\"text\"\n        placeholder=\"Введите название поста\"\n        value={post.title}\n        onChange={ event => setPost({...post, title: event.target.value}) }\n      />\n      <BasicInput\n        type=\"text\"\n        placeholder=\"Введите описание поста\"\n        value={post.body}\n        onChange={ event => setPost({...post, body: event.target.value}) }\n      />\n      <BasicButton onClick={addNewPost}>Добавить пост</BasicButton>\n    </form>\n  );\n};\n\nexport default PostForm;\n","import React from 'react';\n\nimport BasicButton from './UI/BasicButton';\n\nconst Post = ({number, removePost, post}) => {\n  const {title, body} = post;\n\n  return (\n    <div className=\"post\">\n      <div className=\"post__content\">\n        <h3>{number} {title}</h3>\n        <div>{body}</div>\n      </div>\n      <div className=\"post__btns\">\n      <BasicButton onClick={() => removePost(post)}>Удалить пост</BasicButton>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Post;\n","import BasicSelect from './BasicSelect.jsx';\n\nexport default BasicSelect;\n","import React from 'react';\n\nimport classes from './BasicSelect.module.css';\n\nconst BasicSelect = ({options, defaultValue, value, sortPosts}) => {\n\n  return (\n    <select\n      value={value}\n      className={classes.basicSelect}\n      onChange={event => sortPosts(event.target.value)}\n    >\n      <option disabled value=\"\">{defaultValue}</option>\n      {options.map(option =>\n        <option value={option.value} key={option.value}>\n          {option.name}\n        </option>\n      )}\n    </select>\n  );\n};\n\nexport default BasicSelect;\n","import React from 'react';\n\nimport BasicSelect from './UI/BasicSelect';\n\nconst PostSelect = ({filter, setFilter}) => {\n\n  return (\n      <BasicSelect\n        defaultValue=\"Сортировка\"\n        value={filter.sort}\n        sortPosts={ selectedSort => {setFilter({...filter, sort: selectedSort})} }\n        options={[\n          {value: 'title', name: 'По названию'},\n          {value: 'body', name: 'По описанию'},\n        ]}\n      />\n  );\n};\n\nexport default PostSelect;\n","import React from 'react';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Post from './Post.jsx';\nimport PostSelect from './PostSelect.jsx';\n\nconst PostList = ({posts, title, removePost, filter, setFilter}) => {\n  if (!posts.length) {\n    return (\n      <h2 className=\"post-list post-list__title\">Постов не найдено</h2>\n    );\n  }\n\n  return (\n    <div className=\"post-list container\">\n      <div className=\"post-list__header\">\n        <h2 className=\"post-list__title\">{title}</h2>\n        <PostSelect\n          filter={filter}\n          setFilter={setFilter}\n        />\n      </div>\n\n      <TransitionGroup>\n        {posts.map((post, index) =>\n          <CSSTransition\n            key={post.id}\n            timeout={100}\n            classNames=\"post\"\n          >\n            <Post number={index+1} post={post} removePost={removePost} />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n\n    </div>\n  );\n\n};\n\nexport default PostList;\n","import React from 'react';\n\nconst PostFooter = (props) => {\n\n  return (\n    <footer className=\"post-footer\">\n      <p>Created 2021 by <a href=\"https://github.com/voverg\" target=\"_blank\" rel=\"noreferrer\">Voverg</a></p>\n    </footer>\n  );\n};\n\nexport default PostFooter;\n","import BasicModal from './BasicModal.jsx';\n\nexport default BasicModal;\n","import React from 'react';\n\nimport classes from './BasicModal.module.css';\n\nconst BasicModal = ({children, visible, setVisible}) => {\n  const rootClasses = [classes.basicModal];\n\n  if (visible) {\n    rootClasses.push(classes.active);\n  }\n\n  return (\n    <div\n      className={rootClasses.join(' ')}\n      onClick={() => setVisible(false)}\n    >\n      <div\n        className={classes.basicModalContent}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n      </div>\n\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import Loader from './Loader.jsx';\n\nexport default Loader;\n","import React from 'react';\nimport classes from './Loader.module.css'\n\nconst Loader = (props) => {\n\n  return (\n    <div className={classes.loader}></div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\n// Делает запрос к серверу.\n// Получает номер страницы и лимит постов на странице. Возвращает ответ сервера.\nexport default class PostService {\n  static async getAll(limit=10, page=1) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n      params: {\n        _limit: limit,\n        _page: page,\n      }\n    });\n\n    return response;\n  }\n}\n","// Принимает общее кол-во постов и их лимит на одной странице. Возвращает кол-во страниц\nexport const getPageCount = (totalCount, limit) => {\n  const pageCount = Math.ceil(totalCount / limit);\n\n  return pageCount;\n}\n","import {useMemo} from 'react';\n\nexport const _useSortedPosts = (posts, sort) => {\n  const getSortedPosts = () => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    } else {\n      return posts;\n    }\n  };\n\n  const sortedPosts = useMemo(getSortedPosts, [sort, posts]);\n\n  return sortedPosts;\n}\n\n// Принимает список постов, метод сортировки, запрос из поиска. Возвращает список постов,\n// отсортированный по методу сортировки и запросу из поискового поля\nexport const usePosts = (posts, sort, query) => {\n  const sortedPosts = _useSortedPosts(posts, sort);\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()));\n  }, [query, sortedPosts]);\n\n  return sortedAndSearchedPosts;\n}\n","import React, {useState, useEffect} from 'react';\n\nimport PostHeader from './components/PostHeader.jsx';\nimport PostForm from './components/PostForm.jsx';\nimport PostList from './components/PostList.jsx';\nimport PostFooter from './components/PostFooter.jsx';\n\nimport BasicModal from './components/UI/BasicModal';\nimport Loader from './components/UI/Loader';\n\nimport PostService from './API/PostService.js';\nimport {getPageCount} from './utils/pages.js';\nimport {usePosts} from './hooks/usePosts.js';\nimport {useFetching} from './hooks/useFetching.js';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({sort: '', query: ''});\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  let pagesArray = [];\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1);\n  }\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  // Выводим посты при загрузке страницы\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  // Принимает новый созданный пост. Пересоздаёт массив с добавленным новым постом.\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  // Принимает пост. Пересоздаёт массив с удалённым постом.\n  const removePost = (post) => {\n    setPosts(posts.filter(item => item.id !== post.id));\n  }\n\n  return (\n    <div className=\"App\">\n      <BasicModal visible={modal} setVisible={setModal}>\n        <PostForm createPost={createPost} visible={modal} />\n      </BasicModal>\n\n      <PostHeader\n        filter={filter}\n        setFilter={setFilter}\n        setModal={setModal}\n      />\n\n      {postError &&\n        <h2 className=\"post-list container\">Произошла ошибка {postError}</h2>\n      }\n\n      {isPostsLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : <PostList\n            posts={sortedAndSearchedPosts}\n            title=\"Список постов\"\n            removePost={removePost}\n            filter={filter}\n            setFilter={setFilter}\n          />\n      }\n\n      <PostFooter />\n\n    </div>\n  );\n}\n\nexport default App;\n","import {useState} from 'react';\n\n// Получает функцию, обрабатывает её. Возвращает обработку функции, состояние загрузки, ошибку\nexport const useFetching = (callback) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      await callback();\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return [fetching, isLoading, error];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}