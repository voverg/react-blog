{"version":3,"sources":["components/UI/Pagination/Pagination.module.css","components/UI/BasicModal/BasicModal.module.css","components/UI/Navbar/Navbar.module.css","components/UI/BasicButton/BasicButton.module.css","components/UI/BasicHeader/BasicHeader.module.css","components/UI/BasicInput/BasicInput.module.css","components/UI/BasicSelect/BasicSelect.module.css","components/UI/Loader/Loader.module.css","components/UI/BasicButton/index.js","components/UI/BasicButton/BasicButton.jsx","components/UI/BasicHeader/index.js","components/UI/BasicHeader/BasicHeader.jsx","components/UI/BasicInput/index.js","components/UI/BasicInput/BasicInput.jsx","components/UI/BasicModal/index.js","components/UI/BasicModal/BasicModal.jsx","components/UI/BasicSelect/index.js","components/UI/BasicSelect/BasicSelect.jsx","components/UI/Loader/index.js","components/UI/Loader/Loader.jsx","components/UI/Navbar/index.js","components/UI/Navbar/Navbar.jsx","utils/pages.js","components/UI/Pagination/index.js","components/UI/Pagination/Pagination.jsx","context/index.js","pages/About.jsx","API/index.js","API/PostService.js","hooks/useFetching.js","hooks/usePosts.js","router/index.js","pages/Posts.jsx","pages/PostIdPage.jsx","pages/ErrorPage.jsx","pages/Login.jsx","components/AppRouter.jsx","components/Post.jsx","components/PostFooter.jsx","components/PostForm.jsx","components/PostSearch.jsx","components/PostHeader.jsx","components/PostSelect.jsx","components/PostList.jsx","App.js","index.js"],"names":["module","exports","BasicButton","children","props","className","classes","basicButton","BasicHeader","basicHeader","BasicInput","inputClassName","basicInput","BasicModal","visible","setVisible","rootClasses","basicModal","push","active","join","onClick","basicModalContent","event","stopPropagation","BasicSelect","options","defaultValue","value","sortPosts","basicSelect","onChange","target","disabled","map","option","name","Loader","loader","Navbar","navbar","to","navbar__link","getPageCount","totalCount","limit","Math","ceil","Pagination","totalPages","page","changePage","pagesArray","i","getPageArray","pagination","pageNumber","pagination__btn","AuthContext","createContext","About","useContext","setIsAuth","isAuth","Fragment","localStorage","removeItem","PostService","axios","get","params","_limit","_page","response","id","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","usePosts","posts","sort","query","sortedPosts","useMemo","b","localeCompare","_useSortedPosts","filter","post","title","toLowerCase","includes","privateRoutes","path","component","exact","setPosts","setFilter","modal","setModal","setTotalPages","setPage","sortedAndSearchedPosts","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","useEffect","createPost","newPost","removePost","item","useParams","setPost","comments","setComments","getById","fetchPostById","isPostLoading","getCommentsByPostId","fetchComments","body","comment","email","publicRoutes","onSubmit","preventDefault","setItem","type","placeholder","AppRouter","route","Post","number","router","useHistory","PostFooter","href","rel","PostForm","Date","now","PostSelect","PostHeader","PostSearch","style","marginBottom","selectedSort","PostList","length","TransitionGroup","index","CSSTransition","timeout","classNames","App","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9027c3f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2krJz\",\"pagination__btn\":\"Pagination_pagination__btn__118U1\",\"active\":\"Pagination_active__1jy7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicModal\":\"BasicModal_basicModal__2bL6e\",\"basicModalContent\":\"BasicModal_basicModalContent__35Ict\",\"active\":\"BasicModal_active__zWHkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fiE_\",\"navbar__link\":\"Navbar_navbar__link__1kqSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicButton\":\"BasicButton_basicButton__258mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicHeader\":\"BasicHeader_basicHeader__zrxC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicInput\":\"BasicInput_basicInput__1wrLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicSelect\":\"BasicSelect_basicSelect__2gC4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1lNMe\",\"rotate\":\"Loader_rotate__2xdLR\"};","import BasicButton from './BasicButton.jsx';\n\nexport default BasicButton;\n","import React from 'react';\n\nimport classes from './BasicButton.module.css';\n\nconst BasicButton = ({children, ...props}) => {\nconst className = props.className ? props.className : '';\n\n  return (\n    <button {...props} className={ `${classes.basicButton} ${className}` }>\n      {children}\n    </button>\n  );\n};\n\nexport default BasicButton;\n","import BasicHeader from './BasicHeader.jsx';\n\nexport default BasicHeader;\n","import React from 'react';\n\nimport classes from './BasicHeader.module.css';\n\nconst BasicHeader = ({children, ...props}) => {\n  const className = props.className ? props.className : '';\n\n  return (\n    <div className={ `${classes.basicHeader} ${className}` }>\n      {children}\n    </div>\n  );\n};\n\nexport default BasicHeader;\n","import BasicInput from './BasicInput.jsx';\n\nexport default BasicInput;\n","import React from 'react';\n\nimport classes from './BasicInput.module.css';\n\nconst BasicInput = ({className, ...props}) => {\n  const inputClassName = className ? className : '';\n\n  return (\n    <input\n      className={ `${classes.basicInput} ${inputClassName}` }\n      {...props}\n    />\n  );\n};\n\nexport default BasicInput;\n","import BasicModal from './BasicModal.jsx';\n\nexport default BasicModal;\n","import React from 'react';\n\nimport classes from './BasicModal.module.css';\n\nconst BasicModal = ({children, visible, setVisible}) => {\n  const rootClasses = [classes.basicModal];\n\n  if (visible) {\n    rootClasses.push(classes.active);\n  }\n\n  return (\n    <div\n      className={rootClasses.join(' ')}\n      onClick={() => setVisible(false)}\n    >\n      <div\n        className={classes.basicModalContent}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n      </div>\n\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import BasicSelect from './BasicSelect.jsx';\n\nexport default BasicSelect;\n","import React from 'react';\n\nimport classes from './BasicSelect.module.css';\n\nconst BasicSelect = ({options, defaultValue, value, sortPosts}) => {\n\n  return (\n    <select\n      value={value}\n      className={classes.basicSelect}\n      onChange={event => sortPosts(event.target.value)}\n    >\n      <option disabled value=\"\">{defaultValue}</option>\n      {options.map(option =>\n        <option value={option.value} key={option.value}>\n          {option.name}\n        </option>\n      )}\n    </select>\n  );\n};\n\nexport default BasicSelect;\n","import Loader from './Loader.jsx';\n\nexport default Loader;\n","import React from 'react';\nimport classes from './Loader.module.css'\n\nconst Loader = (props) => {\n\n  return (\n    <div className={classes.loader}></div>\n  );\n};\n\nexport default Loader;\n","import Navbar from './Navbar.jsx';\n\nexport default Navbar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nimport classes from './Navbar.module.css';\n\nconst Navbar = (props) => {\n  const className = props.className ? props.className : '';\n\n  return (\n    <div className={ `${classes.navbar} ${className}` }>\n      <Link to=\"/posts\" className={classes.navbar__link}>Посты</Link>\n      <Link to=\"/about\" className={classes.navbar__link}>О блоге</Link>\n    </div>\n  );\n};\n\nexport default Navbar;\n","// Принимает общее кол-во постов и их лимит на одной странице. Возвращает кол-во страниц\nexport const getPageCount = (totalCount, limit) => {\n  const pageCount = Math.ceil(totalCount / limit);\n\n  return pageCount;\n}\n\nexport const getPageArray = (totalPages) => {\n  let pagesArray = [];\n\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1);\n  }\n\n  return pagesArray;\n}\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\n\nimport BasicButton from '../BasicButton';\nimport {getPageArray} from '../../../utils';\n\nimport classes from './Pagination.module.css';\n\nconst Pagination = ({totalPages, page, changePage, ...props}) => {\n  const className = props.className ? props.className : '';\n  const pagesArray = getPageArray(totalPages);\n\n  return (\n    <div className={ `${classes.pagination} ${className}` }>\n      {pagesArray.map(pageNumber =>\n        <BasicButton\n          key={pageNumber}\n          className={\n            pageNumber === page\n              ? `${classes.pagination__btn} ${classes.active}`\n              : classes.pagination__btn\n            }\n          onClick={() => changePage(pageNumber)}\n        >\n          {pageNumber}\n        </BasicButton>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import {createContext} from 'react';\n\nexport const AuthContext = createContext(null);\n","import React, {useContext} from 'react';\n\nimport {PostFooter} from '../components';\nimport {BasicHeader, Navbar, BasicButton} from '../components/UI';\nimport {AuthContext} from '../context';\n\nconst About = (props) => {\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.removeItem('auth');\n  }\n\n\n  return (\n    <React.Fragment>\n      <BasicHeader className=\"about__nav\">\n        <div className=\"container container-flex\">\n          <div className=\"nav-item\">\n            <h1 className=\"about__title\">О блоге</h1>\n          </div>\n          <div className=\"nav-item\">\n            <Navbar />\n          </div>\n\n          <BasicButton\n            className=\"logout__btn\"\n            onClick={logout}\n          >\n            Выйти\n          </BasicButton>\n        </div>\n\n      </BasicHeader>\n\n      <div className=\"about post-list container\">\n        <h2 className=\"post-list__title\">Это учебный проект, созданный на React.</h2>\n        <h3 className=\"\">Здесь вы можете:</h3>\n        <ul className=\"about__list\">\n          <li className=\"about__list-item\">Смотреть списко постов</li>\n          <li className=\"about__list-item\">Смотреть содержимое каждого поста по клику на него</li>\n          <li className=\"about__list-item\">Смотреть комментарии к посту</li>\n          <li className=\"about__list-item\">Сортировать список постов по названию, либо описанию</li>\n          <li className=\"about__list-item\">Осуществлять поиск по названию поста</li>\n          <li className=\"about__list-item\">Добавлять пост</li>\n          <li className=\"about__list-item\">Удалять пост</li>\n          <li className=\"about__list-item\">Сайт адаптирован для мобильных устройств</li>\n        </ul>\n      </div>\n\n      <PostFooter />\n    </React.Fragment>\n  );\n};\n\nexport default About;\n","import PostService from './PostService.js';\n\nexport default PostService;\n","import axios from 'axios';\n\n// Делает запрос к серверу.\n// Получает номер страницы и лимит постов на странице. Возвращает ответ сервера.\nexport default class PostService {\n  static async getAll(limit=10, page=1) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n      params: {\n        _limit: limit,\n        _page: page,\n      }\n    });\n\n    return response;\n  }\n\n  static async getById(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`, {});\n\n    return response;\n  }\n\n  static async getCommentsByPostId(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`, {});\n\n    return response;\n  }\n}\n","import {useState} from 'react';\n\n// Получает функцию, обрабатывает её. Возвращает обработку функции, состояние загрузки, ошибку\nexport const useFetching = (callback) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return [fetching, isLoading, error];\n}\n","import {useMemo} from 'react';\n\nexport const _useSortedPosts = (posts, sort) => {\n  const getSortedPosts = () => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    } else {\n      return posts;\n    }\n  };\n\n  const sortedPosts = useMemo(getSortedPosts, [sort, posts]);\n\n  return sortedPosts;\n}\n\n// Принимает список постов, метод сортировки, запрос из поиска. Возвращает список постов,\n// отсортированный по методу сортировки и запросу из поискового поля\nexport const usePosts = (posts, sort, query) => {\n  const sortedPosts = _useSortedPosts(posts, sort);\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()));\n  }, [query, sortedPosts]);\n\n  return sortedAndSearchedPosts;\n}\n","import {About, Posts, ErrorPage, PostIdPage, Login} from '../pages';\n\nexport const privateRoutes = [\n  {path: '/', component: About, exact: true},\n  {path: '/posts', component: Posts, exact: true},\n  {path: '/posts/:id', component: PostIdPage, exact: true},\n  {path: '/about', component: About, exact: false},\n  {path: '/error', component: ErrorPage, exact: false},\n];\n\nexport const publicRoutes = [\n  {path: '/login', component: Login, exact: true},\n];\n","import React, {useState, useEffect, useContext, useRef} from 'react';\n\nimport {PostHeader, PostForm, PostList, PostFooter} from '../components';\nimport {BasicModal, Loader, BasicButton, Pagination} from '../components/UI';\n\nimport PostService from '../API';\nimport {getPageCount} from '../utils';\nimport {useFetching, usePosts, useObserver} from '../hooks';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({sort: '', query: ''});\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const lastElem = useRef();\n\n  // Получаем данные от запроса по API\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    // setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  // useObserver(lastElem, page < totalPages, isPostsLoading, () => {\n  //   setPage(page + 1);\n  // });\n\n  // useEffect(() => {\n  //   var options = {\n  //     root: document,\n  //   }\n  //   var callback = function(entries, observer) {\n  //     if (isPostsLoading) return;\n  //     if (observer.current) observer.current.disconnect();\n  //     /* Content excerpted, show below */\n  //     if (entries[0].isIntersecting && page < totalPages) {\n  //       setPage(page + 1);\n  //       console.log(page);\n  //     }\n  //   };\n  //   observer.current = new IntersectionObserver(callback, options);\n  //   observer.current.observe(lastElem.current);\n  // }, [isPostsLoading]);\n\n  // Выводим посты при загрузке страницы\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n\n\n  // Принимает новый созданный пост. Пересоздаёт массив с добавленным новым постом.\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  // Принимает пост. Пересоздаёт массив с удалённым постом.\n  const removePost = (post) => {\n    setPosts(posts.filter(item => item.id !== post.id));\n  }\n\n  // Изменение номера страницы\n  const changePage = (pageNumber) => {\n    setPage(pageNumber);\n    // console.log('limit, page: ', limit, page);\n    // fetchPosts(limit, page);\n  }\n\n  return (\n    <div className=\"posts\">\n      <BasicModal visible={modal} setVisible={setModal}>\n        <PostForm createPost={createPost} visible={modal} />\n      </BasicModal>\n\n      <div className=\"post-header__wrapper\">\n        <PostHeader\n          filter={filter}\n          setFilter={setFilter}\n          setModal={setModal}\n        />\n      </div>\n\n      {postError &&\n        <h2 className=\"post-list container\">Произошла ошибка {postError}</h2>\n      }\n\n      {isPostsLoading &&\n        <div className=\"post-list post-list__loader\"><Loader /></div>\n      }\n\n      <PostList\n          posts={sortedAndSearchedPosts}\n          title=\"Список постов\"\n          removePost={removePost}\n          filter={filter}\n          setFilter={setFilter}\n        />\n        {/*<div ref={lastElem} style={{height: 20, background: 'yellow'}} />*/}\n\n      <Pagination\n        className=\"container\"\n        totalPages={totalPages}\n        page={page}\n        changePage={changePage}\n      />\n\n      <PostFooter />\n\n    </div>\n  );\n}\n\nexport default Posts;\n\n","import React, {useState, useEffect, useContext} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {PostFooter} from '../components';\nimport {BasicHeader, Navbar, Loader, BasicButton} from '../components/UI';\n\nimport PostService from '../API';\nimport {useFetching} from '../hooks';\nimport {AuthContext} from '../context';\n\nconst PostIdPage = (props) => {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.removeItem('auth');\n  }\n\n  // Получаем данные поста от запроса по API\n  const [fetchPostById, isPostLoading, postError] = useFetching(async (id) => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n\n  // Получаем данные комментариев поста от запроса по API\n  const [fetchComments, isCommentsLoading, commentsError] = useFetching(async (id) => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n\n  // Выводим пост при загрузке страницы\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <BasicHeader className=\"about__nav\">\n        <div className=\"container container-flex\">\n          <div className=\"nav-item\">\n            <h1 className=\"about__title\">Пост с ID = {params.id}</h1>\n          </div>\n          <div className=\"nav-item\">\n            <Navbar />\n          </div>\n\n          <BasicButton\n            className=\"logout__btn\"\n            onClick={logout}\n          >\n            Выйти\n          </BasicButton>\n        </div>\n\n      </BasicHeader>\n\n      {isPostLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : <div className=\"about post-list container\">\n            <h2 className=\"post-list__title\">{post.title}</h2>\n            <p className=\"post-list__content\">{post.body}</p>\n          </div>\n      }\n\n      <h2 className=\"about container\">Комментарии</h2>\n      {isPostLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : comments.map(comment =>\n            <div className=\"about container\" key={comment.id}>\n              <p className=\"post-list__content\"><strong>Имя:</strong> {comment.name}</p>\n              <p className=\"post-list__content\"><strong>Эл. почта:</strong> {comment.email}</p>\n              <p className=\"post-list__content\"><strong>Комментарий:</strong> {comment.body}</p>\n            </div>\n          )\n      }\n\n\n      <PostFooter />\n    </React.Fragment>\n  );\n};\n\nexport default PostIdPage;\n","import React from 'react';\n\nimport {PostFooter} from '../components';\nimport {BasicHeader, Navbar} from '../components/UI';\n\nconst Error = (props) => {\n\n  return (\n    <React.Fragment>\n      <BasicHeader  className=\"about__nav\">\n        <div className=\"nav-item container\">\n          <h1 className=\"about__title\">404</h1>\n        </div>\n        <div className=\"nav-item container\">\n          <Navbar />\n        </div>\n      </BasicHeader>\n\n      <div className=\"error post-list container\">\n        <h2 className=\"post-list__title\">Такой страницы не существует!</h2>\n      </div>\n\n      <PostFooter />\n    </React.Fragment>\n  );\n};\n\nexport default Error;\n","import React, {useContext} from 'react';\n\nimport {PostFooter} from '../components';\nimport {BasicHeader, BasicInput, BasicButton} from '../components/UI';\nimport {AuthContext} from '../context';\n\nconst Login = (props) => {\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n\n  const login = (event) => {\n    event.preventDefault();\n\n    setIsAuth(true);\n    localStorage.setItem('auth', 'true');\n  }\n\n  return (\n    <React.Fragment>\n      <BasicHeader className=\"about__nav\">\n        <div className=\"nav-item container\">\n          <h1 className=\"login__title\">Авторизация</h1>\n        </div>\n      </BasicHeader>\n\n      <div className=\"about post-list container\">\n        <h2 className=\"post-list__title\">Чтобы войти, введите логин и пароль</h2>\n\n        <form className=\"login-form\" onSubmit={login}>\n          <BasicInput\n            type=\"text\"\n            className=\"post-form__input\"\n            placeholder=\"Введите логин...\"\n          />\n          <BasicInput\n            type=\"password\"\n            className=\"post-form__input\"\n            placeholder=\"Введите пароль...\"\n          />\n          <div className=\"post-form__btns\">\n            <BasicButton>Войти</BasicButton>\n          </div>\n        </form>\n\n      </div>\n\n      <PostFooter />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, {useContext} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {Loader} from './UI';\nimport {About, Posts, ErrorPage, PostIdPage} from '../pages';\nimport {privateRoutes, publicRoutes} from '../router';\nimport {AuthContext} from '../context';\n\nconst AppRouter = (props) => {\n  const {isAuth, isLoading} = useContext(AuthContext);\n\n  if (isLoading) {\n    return <Loader />\n  }\n\n  return (\n    isAuth\n      ?\n      <Switch>\n        {privateRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to=\"/about\" />\n      </Switch>\n      :\n      <Switch>\n        {publicRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to=\"/login\" />\n      </Switch>\n\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport BasicButton from './UI/BasicButton';\n\nconst Post = ({number, removePost, post}) => {\n  const {id, title, body} = post;\n  const router = useHistory();\n\n  return (\n    <div className=\"post\">\n      <div className=\"post__content\" onClick={() => router.push(`/posts/${id}`)}>\n        <h3 className=\"post__title\">{id} {title}</h3>\n        <div>{body}</div>\n      </div>\n      <div className=\"post__btns\">\n        <BasicButton onClick={() => removePost(post)}>Удалить пост</BasicButton>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Post;\n","import React from 'react';\n\nconst PostFooter = (props) => {\n\n  return (\n    <footer className=\"post-footer\">\n      <p>Created 2021 by <a href=\"https://github.com/voverg\" target=\"_blank\" rel=\"noreferrer\">Voverg</a></p>\n    </footer>\n  );\n};\n\nexport default PostFooter;\n","import React, {useState, useMemo} from 'react';\n\nimport BasicButton from './UI/BasicButton';\nimport BasicInput from './UI/BasicInput';\n\nconst PostForm = ({createPost, visible}) => {\n  const [post, setPost] = useState({title: '', body: ''});\n\n  // Очищаем поля формы, когда она становится невидимой\n  useMemo(() => {\n    if (!visible) {\n      setPost({...post, title: '', body: ''});\n    }\n  }, [visible])\n\n  // Добавить новый пост\n  const addNewPost = (event) => {\n    event.preventDefault();\n    if (!post.title || !post.body) return;\n\n    const newPost = {\n      ...post,\n      id: Date.now(),\n    };\n\n    // Добавляем новый пост в массив с постами\n    createPost(newPost);\n\n    // Очистка полей формы после создания поста\n    // setPost({...post, title: '', body: ''});\n  };\n\n  return (\n    <form className=\"post-form\">\n      <h2 className=\"post-form__title\">Добавить новый пост</h2>\n      <BasicInput\n        type=\"text\"\n        className=\"post-form__input\"\n        placeholder=\"Введите название поста\"\n        value={post.title}\n        onChange={ event => setPost({...post, title: event.target.value}) }\n      />\n      <BasicInput\n        type=\"text\"\n        className=\"post-form__input\"\n        placeholder=\"Введите описание поста\"\n        value={post.body}\n        onChange={ event => setPost({...post, body: event.target.value}) }\n      />\n      <div className=\"post-form__btns\">\n        <BasicButton onClick={addNewPost}>Добавить пост</BasicButton>\n      </div>\n    </form>\n  );\n};\n\nexport default PostForm;\n","import React from 'react';\n\nimport BasicInput from './UI/BasicInput';\n\nconst PostSelect = ({filter, setFilter}) => {\n\n  return (\n    <BasicInput\n      type=\"text\"\n      placeholder=\"Поиск...\"\n      value={filter.query}\n      onChange={ event => setFilter({...filter, query: event.target.value}) }\n    />\n  );\n};\n\nexport default PostSelect;\n","import React, {useContext} from 'react';\n\nimport PostSearch from './PostSearch.jsx';\nimport {Navbar, BasicButton} from './UI';\nimport {AuthContext} from '../context';\n\nconst PostHeader = ({filter, setFilter, setModal}) => {\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.removeItem('auth');\n  }\n\n  return (\n    <div className=\"post-header\">\n        <div className=\"post-header__nav container\">\n          <div className=\"nav-item\">\n            <BasicButton\n              onClick={() => setModal(true)}\n            >\n              Создать пост\n            </BasicButton>\n\n            <BasicButton\n              onClick={logout}\n              className=\"logout__btn\"\n            >\n              Выйти\n            </BasicButton>\n          </div>\n\n          <div className=\"nav-item\">\n            <Navbar />\n            {/*<h1 className=\"post-header__title\">Блог</h1>*/}\n          </div>\n\n          <div className=\"nav-item\">\n            <PostSearch\n              style={{marginBottom: '2px'}}\n              filter={filter}\n              setFilter={setFilter}\n            />\n          </div>\n\n        </div>\n\n\n\n    </div>\n  );\n};\n\nexport default PostHeader;\n","import React from 'react';\n\nimport BasicSelect from './UI/BasicSelect';\n\nconst PostSelect = ({filter, setFilter}) => {\n\n  return (\n      <BasicSelect\n        defaultValue=\"Сортировка\"\n        value={filter.sort}\n        sortPosts={ selectedSort => {setFilter({...filter, sort: selectedSort})} }\n        options={[\n          {value: 'title', name: 'По названию'},\n          {value: 'body', name: 'По описанию'},\n        ]}\n      />\n  );\n};\n\nexport default PostSelect;\n","import React from 'react';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Post from './Post.jsx';\nimport PostSelect from './PostSelect.jsx';\n\nconst PostList = ({posts, title, removePost, filter, setFilter}) => {\n  if (!posts.length) {\n    return (\n      <h2 className=\"post-list post-list__title\">Постов не найдено</h2>\n    );\n  }\n\n  return (\n    <div className=\"post-list container\">\n      <div className=\"post-list__header\">\n        <h2 className=\"post-list__title\">{title}</h2>\n        <PostSelect\n          filter={filter}\n          setFilter={setFilter}\n        />\n      </div>\n\n      <TransitionGroup>\n        {posts.map((post, index) =>\n          <CSSTransition\n            key={post.id}\n            timeout={100}\n            classNames=\"post\"\n          >\n            <Post number={index+1} post={post} removePost={removePost} />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n\n    </div>\n  );\n\n};\n\nexport default PostList;\n","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {AppRouter} from './components';\nimport {AuthContext} from './context';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setIsAuth(true);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading,\n    }}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <AppRouter />\n        </BrowserRouter>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}