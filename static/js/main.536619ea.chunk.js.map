{"version":3,"sources":["components/UI/Navbar/Navbar.module.css","components/UI/Pagination/Pagination.module.css","components/UI/BasicModal/BasicModal.module.css","components/UI/BasicHeader/BasicHeader.module.css","components/UI/BasicButton/BasicButton.module.css","components/UI/BasicInput/BasicInput.module.css","components/UI/BasicSelect/BasicSelect.module.css","components/UI/BasicFooter/BasicFooter.module.css","components/UI/Loader/Loader.module.css","components/UI/BasicButton/index.js","components/UI/BasicButton/BasicButton.jsx","components/UI/BasicHeader/index.js","components/UI/BasicHeader/BasicHeader.jsx","components/UI/BasicInput/index.js","components/UI/BasicInput/BasicInput.jsx","components/UI/BasicModal/index.js","components/UI/BasicModal/BasicModal.jsx","components/UI/BasicSelect/index.js","components/UI/BasicSelect/BasicSelect.jsx","components/UI/BasicFooter/index.js","components/UI/BasicFooter/BasicFooter.jsx","components/UI/Loader/index.js","components/UI/Loader/Loader.jsx","context/index.js","components/UI/Navbar/index.js","components/UI/Navbar/Navbar.jsx","utils/pages.js","components/UI/Pagination/index.js","components/UI/Pagination/Pagination.jsx","pages/About.jsx","API/index.js","API/PostService.js","hooks/useFetching.js","hooks/usePosts.js","router/index.js","pages/Posts.jsx","pages/PostIdPage.jsx","pages/Login.jsx","components/AppRouter.jsx","components/Post.jsx","components/PostForm.jsx","components/PostHeader.jsx","components/PostList.jsx","App.js","index.js"],"names":["module","exports","BasicButton","children","props","className","classes","basicButton","BasicHeader","basicHeader","basicHeader__container","BasicInput","inputClassName","basicInput","BasicModal","visible","setVisible","rootClasses","basicModal","push","active","join","onClick","basicModalContent","event","stopPropagation","BasicSelect","options","defaultValue","value","onChange","basicSelect","target","disabled","map","option","name","BasicFooter","basicFooter","href","rel","Loader","loader","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","navbar","to","navbar__link","logout__btn","localStorage","removeItem","getPageCount","totalCount","limit","Math","ceil","Pagination","totalPages","page","changePage","pagesArray","i","getPageArray","pagination","pageNumber","pagination__btn","About","PostService","axios","get","params","_limit","_page","response","id","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","usePosts","posts","sort","query","sortedPosts","useMemo","b","localeCompare","_useSortedPosts","filter","post","title","toLowerCase","includes","privateRoutes","path","component","exact","setPosts","setFilter","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","useEffect","createPost","newPost","removePost","item","useParams","setPost","comments","setComments","getById","fetchPostById","isPostLoading","getCommentsByPostId","fetchComments","body","comment","email","publicRoutes","onSubmit","preventDefault","setItem","type","placeholder","AppRouter","route","Post","number","router","useHistory","PostForm","Date","now","PostHeader","PostList","length","selectedSort","TransitionGroup","index","CSSTransition","timeout","classNames","App","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,YAAc,8B,mBCA5GD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,gBAAkB,oCAAoC,OAAS,6B,mBCA7HD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,OAAS,6B,mBCAjID,EAAOC,QAAU,CAAC,YAAc,iCAAiC,uBAAyB,8C,mBCA1FD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,qJCC5CC,ECEK,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,4BACxCC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAEpD,OACE,kDAAYD,GAAZ,IAAmBC,UAAS,UAAMC,IAAQC,YAAd,YAA6BF,GAAzD,SACGF,M,iBCPQK,ECEK,SAAC,GAA0B,IAAzBL,EAAwB,EAAxBA,SAAaC,EAAW,4BACtCC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAEtD,OACE,qBAAKA,UAAS,UAAMC,IAAQG,YAAd,YAA6BJ,GAA3C,SACE,qBAAKA,UAAWC,IAAQI,uBAAxB,SACGP,O,iBCRMQ,ECEI,SAAC,GAA2B,IAA1BN,EAAyB,EAAzBA,UAAcD,EAAW,6BACtCQ,EAAiBP,GAAwB,GAE/C,OACE,mCACEA,UAAS,UAAMC,IAAQO,WAAd,YAA4BD,IACjCR,K,iBCRKU,ECEI,SAAC,GAAqC,IAApCX,EAAmC,EAAnCA,SAAUY,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAChCC,EAAc,CAACX,IAAQY,YAM7B,OAJIH,GACFE,EAAYE,KAAKb,IAAQc,QAIzB,qBACEf,UAAWY,EAAYI,KAAK,KAC5BC,QAAS,kBAAMN,GAAW,IAF5B,SAIE,qBACEX,UAAWC,IAAQiB,kBACnBD,QAAS,SAACE,GAAD,OAAWA,EAAMC,mBAF5B,SAIGtB,O,iBClBMuB,ECEK,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAElD,OACE,yBACED,MAAOA,EACPxB,UAAWC,IAAQyB,YACnBD,SAAU,SAAAN,GAAK,OAAIM,EAASN,EAAMQ,OAAOH,QAH3C,UAKE,wBAAQI,UAAQ,EAACJ,MAAM,GAAvB,SAA2BD,IAC1BD,EAAQO,KAAI,SAAAC,GAAM,OACjB,wBAAQN,MAAOM,EAAON,MAAtB,SACGM,EAAOC,MADwBD,EAAON,c,iBCZlCQ,ECEK,SAACjC,GAEnB,OACE,wBAAQC,UAAWC,IAAQgC,YAA3B,SACE,iDAAmB,mBAAGC,KAAK,4BAA4BP,OAAO,SAASQ,IAAI,aAAxD,0B,iBCNVC,ECCA,SAACrC,GAEd,OACE,qBAAKC,UAAWC,IAAQoC,U,iBCJfC,EAAcC,wBAAc,MCA1BC,ECMA,SAACzC,GACd,IAAMC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAD9B,EAEIyC,qBAAWH,GAAxBI,GAFS,EAEjBC,OAFiB,EAETD,WAOf,OACE,sBAAK1C,UAAS,UAAMC,IAAQ2C,OAAd,YAAwB5C,GAAtC,UACE,cAAC,IAAD,CAAM6C,GAAG,SAAS7C,UAAWC,IAAQ6C,aAArC,4CACA,cAAC,IAAD,CAAMD,GAAG,SAAS7C,UAAWC,IAAQ6C,aAArC,mDAEA,cAAC,EAAD,CACE9C,UAAWC,IAAQ8C,YACnB9B,QAZS,WACbyB,GAAU,GACVM,aAAaC,WAAW,SAQtB,gDCrBOC,EAAe,SAACC,EAAYC,GAGvC,OAFkBC,KAAKC,KAAKH,EAAaC,I,iBCA5BG,ECKI,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAe3D,EAAW,kDACzDC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAChD2D,EFFoB,SAACH,GAG3B,IAFA,IAAIG,EAAa,GAERC,EAAI,EAAGA,EAAIJ,EAAYI,IAC9BD,EAAW7C,KAAK8C,EAAI,GAGtB,OAAOD,EELYE,CAAaL,GAEhC,OACE,qBAAKxD,UAAS,UAAMC,IAAQ6D,WAAd,YAA4B9D,GAA1C,SACG2D,EAAW9B,KAAI,SAAAkC,GAAU,OACxB,cAAC,EAAD,CAEE/D,UACE+D,IAAeN,EAAf,UACOxD,IAAQ+D,gBADf,YACkC/D,IAAQc,QACtCd,IAAQ+D,gBAEd/C,QAAS,kBAAMyC,EAAWK,IAP5B,SASGA,GARIA,SCmBAE,EA9BD,SAAClE,GAEb,OACE,sBAAKC,UAAU,OAAf,UACE,eAAC,EAAD,WACE,oBAAIA,UAAU,qBAAd,mDACA,cAAC,EAAD,OAGF,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,sBAAd,4LACA,oBAAIA,UAAU,GAAd,+FACA,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,mBAAd,wIACA,oBAAIA,UAAU,mBAAd,uRACA,oBAAIA,UAAU,mBAAd,uKACA,oBAAIA,UAAU,mBAAd,kNACA,oBAAIA,UAAU,mBAAd,0QACA,oBAAIA,UAAU,mBAAd,mSACA,oBAAIA,UAAU,mBAAd,6FACA,oBAAIA,UAAU,mBAAd,iFACA,oBAAIA,UAAU,mBAAd,gPAIJ,cAAC,EAAD,Q,iEC3BSkE,E,kICGb,2GAAoBd,EAApB,+BAA0B,GAAIK,EAA9B,+BAAmC,EAAnC,SACyBU,IAAMC,IAAI,6CAA8C,CAC7EC,OAAQ,CACNC,OAAQlB,EACRmB,MAAOd,KAJb,cACQe,EADR,yBAQSA,GART,2C,kHAWA,WAAqBC,GAArB,uFACyBN,IAAMC,IAAN,qDAAwDK,GAAM,IADvF,cACQD,EADR,yBAGSA,GAHT,2C,+HAMA,WAAiCC,GAAjC,uFACyBN,IAAMC,IAAN,qDAAwDK,EAAxD,aAAuE,IADhG,cACQD,EADR,yBAGSA,GAHT,2C,8DCnBWE,EAAc,SAACC,GAAc,IAAD,EACLC,oBAAS,GADJ,mBAChCC,EADgC,KACrBC,EADqB,OAEbF,mBAAS,IAFI,mBAEhCG,EAFgC,KAEzBC,EAFyB,KAevC,MAAO,CAXO,uCAAG,sCAAAC,EAAA,sEAEbH,GAAa,GAFA,SAGPH,EAAQ,WAAR,KAHO,sDAKbK,EAAS,KAAME,SALF,uBAObJ,GAAa,GAPA,0EAAH,qDAWID,EAAWE,ICAlBI,EAAW,SAACC,EAAOC,EAAMC,GACpC,IAAMC,EAjBuB,SAACH,EAAOC,GAWrC,OAFoBG,mBARG,WACrB,OAAIH,EACK,YAAID,GAAOC,MAAK,SAACJ,EAAGQ,GAAJ,OAAUR,EAAEI,GAAMK,cAAcD,EAAEJ,OAElDD,IAIiC,CAACC,EAAMD,IAQ/BO,CAAgBP,EAAOC,GAM3C,OAJ+BG,mBAAQ,WACrC,OAAOD,EAAYK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,cAAcC,SAASV,EAAMS,oBACzE,CAACT,EAAOC,KCrBAU,EAAgB,CAC3B,CAACC,KAAM,eAAgBC,UAAWlC,EAAOmC,OAAO,GAChD,CAACF,KAAM,oBAAqBC,UCKhB,WAAO,IAAD,EACQvB,mBAAS,IADjB,mBACXQ,EADW,KACJiB,EADI,OAEUzB,mBAAS,CAACS,KAAM,GAAIC,MAAO,KAFrC,mBAEXM,EAFW,KAEHU,EAFG,OAGQ1B,oBAAS,GAHjB,mBAGX2B,EAHW,KAGJC,EAHI,OAIkB5B,mBAAS,GAJ3B,mBAIXpB,EAJW,KAICiD,EAJD,OAKQ7B,mBAAS,IALjB,mBAKXxB,EALW,KAKJsD,EALI,OAMM9B,mBAAS,GANf,mBAMXnB,EANW,KAMLkD,EANK,KAOZC,EAAyBzB,EAASC,EAAOQ,EAAOP,KAAMO,EAAON,OAPjD,GASDuB,mBAG+BnC,EAAW,sBAAC,8BAAAO,EAAA,sEACnCf,EAAY4C,OAAO1D,EAAOK,GADS,OACpDe,EADoD,OAE1D6B,EAAS7B,EAASuC,MAEZ5D,EAAaqB,EAASwC,QAAQ,iBACpCP,EAAcvD,EAAaC,EAAYC,IALmB,6CAZ1C,mBAYX6D,EAZW,KAYCC,EAZD,KAYiBC,EAZjB,KA0ClBC,qBAAU,WACRH,MACC,CAACxD,EAAML,IAkBV,OACE,sBAAKpD,UAAU,OAAf,UACE,cAAC,EAAD,CAAYU,QAAS6F,EAAO5F,WAAY6F,EAAxC,SACE,cAAC,GAAD,CAAUa,WAlBG,SAACC,GAClBjB,EAAS,GAAD,mBAAKjB,GAAL,CAAYkC,KACpBd,GAAS,IAgB6B9F,QAAS6F,MAG7C,cAAC,GAAD,CACEX,OAAQA,EACRU,UAAWA,EACXE,SAAUA,IAGXW,GACC,qBAAInH,UAAU,gCAAd,yGAAgEmH,KAGjED,GACC,qBAAKlH,UAAU,sBAAf,SAAqC,cAAC,EAAD,MAGvC,cAAC,GAAD,CACIoF,MAAOwB,EACPd,MAAM,4EACNyB,WAhCW,SAAC1B,GAClBQ,EAASjB,EAAMQ,QAAO,SAAA4B,GAAI,OAAIA,EAAK/C,KAAOoB,EAAKpB,QAgCzCmB,OAAQA,EACRU,UAAWA,EACXlD,MAAOA,EACPsD,SAAUA,IAId,cAAC,EAAD,CACE1G,UAAU,YACVwD,WAAYA,EACZC,KAAMA,EACNC,WAvCa,SAACK,GAClB4C,EAAQ5C,MAyCN,cAAC,EAAD,QDzG0CqC,OAAO,GACrD,CAACF,KAAM,wBAAyBC,UEEf,SAACpG,GAClB,IAAMsE,EAASoD,cADa,EAEJ7C,mBAAS,IAFL,mBAErBiB,EAFqB,KAEf6B,EAFe,OAGI9C,mBAAS,IAHb,mBAGrB+C,EAHqB,KAGXC,EAHW,OAMsBlD,EAAW,uCAAC,WAAOD,GAAP,eAAAQ,EAAA,sEACrCf,EAAY2D,QAAQpD,GADiB,OACtDD,EADsD,OAE5DkD,EAAQlD,EAASuC,MAF2C,2CAAD,uDANjC,mBAMrBe,EANqB,KAMNC,EANM,aAY8BrD,EAAW,uCAAC,WAAOD,GAAP,eAAAQ,EAAA,sEAC7Cf,EAAY8D,oBAAoBvD,GADa,OAC9DD,EAD8D,OAEpEoD,EAAYpD,EAASuC,MAF+C,2CAAD,wDAZzC,mBAYrBkB,EAZqB,eAuB5B,OALAb,qBAAU,WACRU,EAAczD,EAAOI,IACrBwD,EAAc5D,EAAOI,MACpB,IAGD,sBAAKzE,UAAU,OAAf,UACE,eAAC,EAAD,WACE,qBAAIA,UAAU,qBAAd,kDAAgDqE,EAAOI,MACvD,cAAC,EAAD,OAGDsD,EACG,qBAAK/H,UAAU,8BAAf,SAA6C,cAAC,EAAD,MAC7C,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqC6F,EAAKC,QAC1C,4BAAID,EAAKqC,UAIf,oBAAIlI,UAAU,YAAd,gFACC+H,EACG,qBAAK/H,UAAU,8BAAf,SAA6C,cAAC,EAAD,MAC7C2H,EAAS9F,KAAI,SAAAsG,GAAO,OAClB,sBAAKnI,UAAU,YAAf,UACE,8BAAG,yDAAH,IAA0BmI,EAAQpG,QAClC,8BAAG,mFAAH,IAAgCoG,EAAQC,SACxC,8BAAG,yGAAH,IAAkCD,EAAQD,UAHZC,EAAQ1D,OAQ9C,cAAC,EAAD,QFpDmD2B,OAAO,GAC9D,CAACF,KAAM,oBAAqBC,UAAWlC,EAAOmC,OAAO,IAG1CiC,GAAe,CAC1B,CAACnC,KAAM,oBAAqBC,UGLhB,SAACpG,GAAW,IAAD,EACK0C,qBAAWH,GAAxBI,GADQ,EAChBC,OADgB,EACRD,WASf,OACE,sBAAK1C,UAAU,OAAf,UACE,cAAC,EAAD,UACE,oBAAIA,UAAU,eAAd,kFAGF,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,sBAAd,kMAEA,uBAAMA,UAAU,aAAasI,SAhBrB,SAACnH,GACbA,EAAMoH,iBAEN7F,GAAU,GACVM,aAAawF,QAAQ,OAAQ,SAYzB,UACE,cAAC,EAAD,CACEC,KAAK,OACLzI,UAAU,mBACV0I,YAAY,iFAEd,cAAC,EAAD,CACED,KAAK,WACLzI,UAAU,mBACV0I,YAAY,uFAEd,qBAAK1I,UAAU,kBAAf,SACE,cAAC,EAAD,qDAMN,cAAC,EAAD,QHhC0CoG,OAAO,IImCxCuC,GArCG,SAAC5I,GAAW,IAAD,EACC0C,qBAAWH,GAAhCK,EADoB,EACpBA,OAEP,OAH2B,EACZkC,UAGN,qBAAK7E,UAAU,sBAAf,SAAqC,cAAC,EAAD,MAI5C2C,EAEE,eAAC,IAAD,WACGsD,EAAcpE,KAAI,SAAA+G,GAAK,OACtB,cAAC,IAAD,CAEE1C,KAAM0C,EAAM1C,KACZC,UAAWyC,EAAMzC,UACjBC,MAAOwC,EAAMxC,OAHRwC,EAAM1C,SAMf,cAAC,IAAD,CAAUrD,GAAG,yBAGf,eAAC,IAAD,WACGwF,GAAaxG,KAAI,SAAA+G,GAAK,OACrB,cAAC,IAAD,CAEE1C,KAAM0C,EAAM1C,KACZC,UAAWyC,EAAMzC,UACjBC,MAAOwC,EAAMxC,OAHRwC,EAAM1C,SAMf,cAAC,IAAD,CAAUrD,GAAG,0BChBNgG,GAlBF,SAAC,GAA+B,EAA9BC,OAA+B,IAAvBvB,EAAsB,EAAtBA,WAAY1B,EAAU,EAAVA,KAC1BpB,EAAmBoB,EAAnBpB,GAAIqB,EAAeD,EAAfC,MAAOoC,EAAQrC,EAARqC,KACZa,EAASC,cAEf,OACE,sBAAKhJ,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAgBiB,QAAS,kBAAM8H,EAAOjI,KAAP,iBAAsB2D,KAApE,UACE,qBAAIzE,UAAU,cAAd,UAA6ByE,EAA7B,IAAkCqB,KAClC,8BAAMoC,OAER,qBAAKlI,UAAU,aAAf,SACE,cAAC,EAAD,CAAaiB,QAAS,kBAAMsG,EAAW1B,IAAvC,uFCwCOoD,GAnDE,SAAC,GAA2B,IAA1B5B,EAAyB,EAAzBA,WAAY3G,EAAa,EAAbA,QAAa,EAClBkE,mBAAS,CAACkB,MAAO,GAAIoC,KAAM,KADT,mBACnCrC,EADmC,KAC7B6B,EAD6B,KAI1ClC,mBAAQ,WACD9E,GACHgH,EAAQ,2BAAI7B,GAAL,IAAWC,MAAO,GAAIoC,KAAM,QAEpC,CAACxH,IAmBJ,OACE,uBAAMV,UAAU,YAAhB,UACE,oBAAIA,UAAU,mBAAd,sHACA,cAAC,EAAD,CACEyI,KAAK,OACLzI,UAAU,mBACV0I,YAAY,6HACZlH,MAAOqE,EAAKC,MACZrE,SAAW,SAAAN,GAAK,OAAIuG,EAAQ,2BAAI7B,GAAL,IAAWC,MAAO3E,EAAMQ,OAAOH,YAE5D,cAAC,EAAD,CACEiH,KAAK,OACLzI,UAAU,mBACV0I,YAAY,6HACZlH,MAAOqE,EAAKqC,KACZzG,SAAW,SAAAN,GAAK,OAAIuG,EAAQ,2BAAI7B,GAAL,IAAWqC,KAAM/G,EAAMQ,OAAOH,YAE3D,qBAAKxB,UAAU,kBAAf,SACE,cAAC,EAAD,CAAaiB,QAlCA,SAACE,GAElB,GADAA,EAAMoH,iBACD1C,EAAKC,OAAUD,EAAKqC,KAAzB,CAEA,IAAMZ,EAAO,2BACRzB,GADQ,IAEXpB,GAAIyE,KAAKC,QAIX9B,EAAWC,KAwBP,6FClBO8B,GA5BI,SAAC,GAAmC,IAAlCxD,EAAiC,EAAjCA,OAAQU,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,SAEtC,OACE,eAAC,EAAD,WACE,oBAAIxG,UAAU,qBAAd,4CACA,cAAC,EAAD,IAEA,sBAAKA,UAAU,uBAAf,UACE,cAAC,EAAD,CACEA,UAAU,gBACViB,QAAS,kBAAMuF,GAAS,IAF1B,iFAOA,cAAC,EAAD,CACEiC,KAAK,OACLzI,UAAU,sBACV0I,YAAY,oCACZlH,MAAOoE,EAAON,MACd7D,SAAW,SAAAN,GAAK,OAAImF,EAAU,2BAAIV,GAAL,IAAaN,MAAOnE,EAAMQ,OAAOH,mB,kBCuCzD6H,GAzDE,SAAC,GAAoE,IAAnEjE,EAAkE,EAAlEA,MAAOU,EAA2D,EAA3DA,MAAOyB,EAAoD,EAApDA,WAAY3B,EAAwC,EAAxCA,OAAQU,EAAgC,EAAhCA,UAAWlD,EAAqB,EAArBA,MAAOsD,EAAc,EAAdA,SACrE,OAAKtB,EAAMkE,OAST,sBAAKtJ,UAAU,oCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkC8F,IAElC,sBAAK9F,UAAU,qBAAf,UACE,cAAC,EAAD,CACEuB,aAAa,uEACbC,MAAO4B,EACP3B,SAAU,SAAAD,GAAK,OAAIkF,EAASlF,IAC5BF,QAAS,CACP,CAACE,MAAO,EAAGO,KAAM,KACjB,CAACP,MAAO,GAAIO,KAAM,MAClB,CAACP,MAAO,GAAIO,KAAM,MAClB,CAACP,MAAO,GAAIO,KAAM,MAClB,CAACP,OAAQ,EAAGO,KAAM,wDAGtB,cAAC,EAAD,CACER,aAAa,+DACbC,MAAOoE,EAAOP,KACd5D,SAAW,SAAA8H,GAAiBjD,EAAU,2BAAIV,GAAL,IAAaP,KAAMkE,MACxDjI,QAAS,CACP,CAACE,MAAO,QAASO,KAAM,iEACvB,CAACP,MAAO,OAAQO,KAAM,0EAO9B,cAACyH,GAAA,EAAD,UACGpE,EAAMvD,KAAI,SAACgE,EAAM4D,GAAP,OACT,cAACC,GAAA,EAAD,CAEEC,QAAS,IACTC,WAAW,OAHb,SAKE,cAAC,GAAD,CAAMd,OAAQW,EAAM,EAAG5D,KAAMA,EAAM0B,WAAYA,KAJ1C1B,EAAKpB,YAxChB,qBAAKzE,UAAU,oCAAf,SACE,oBAAIA,UAAU,sBAAd,6GCyBO6J,I,MA3BH,WAAO,IAAD,EACYjF,oBAAS,GADrB,mBACTjC,EADS,KACDD,EADC,OAEkBkC,oBAAS,GAF3B,mBAETC,EAFS,KAEEC,EAFF,KAYhB,OARAsC,qBAAU,WACJpE,aAAa8G,QAAQ,SACvBpH,GAAU,GAGZoC,GAAa,KACZ,IAGD,cAACxC,EAAYyH,SAAb,CAAsBvI,MAAO,CAC3BmB,SACAD,YACAmC,aAHF,SAME,cAAC,IAAD,UACE,cAAC,GAAD,UCxBRmF,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.536619ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fiE_\",\"navbar__link\":\"Navbar_navbar__link__1kqSJ\",\"logout__btn\":\"Navbar_logout__btn__3GsPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2krJz\",\"pagination__btn\":\"Pagination_pagination__btn__118U1\",\"active\":\"Pagination_active__1jy7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicModal\":\"BasicModal_basicModal__2bL6e\",\"basicModalContent\":\"BasicModal_basicModalContent__35Ict\",\"active\":\"BasicModal_active__zWHkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicHeader\":\"BasicHeader_basicHeader__zrxC2\",\"basicHeader__container\":\"BasicHeader_basicHeader__container__1mv3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicButton\":\"BasicButton_basicButton__258mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicInput\":\"BasicInput_basicInput__1wrLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicSelect\":\"BasicSelect_basicSelect__2gC4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicFooter\":\"BasicFooter_basicFooter__19t_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1lNMe\",\"rotate\":\"Loader_rotate__2xdLR\"};","import BasicButton from './BasicButton.jsx';\n\nexport default BasicButton;\n","import React from 'react';\n\nimport classes from './BasicButton.module.css';\n\nconst BasicButton = ({children, ...props}) => {\nconst className = props.className ? props.className : '';\n\n  return (\n    <button {...props} className={ `${classes.basicButton} ${className}` }>\n      {children}\n    </button>\n  );\n};\n\nexport default BasicButton;\n","import BasicHeader from './BasicHeader.jsx';\n\nexport default BasicHeader;\n","import React from 'react';\n\nimport classes from './BasicHeader.module.css';\n\nconst BasicHeader = ({children, ...props}) => {\n  const className = props.className ? props.className : '';\n\n  return (\n    <div className={ `${classes.basicHeader} ${className}` }>\n      <div className={classes.basicHeader__container}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default BasicHeader;\n","import BasicInput from './BasicInput.jsx';\n\nexport default BasicInput;\n","import React from 'react';\n\nimport classes from './BasicInput.module.css';\n\nconst BasicInput = ({className, ...props}) => {\n  const inputClassName = className ? className : '';\n\n  return (\n    <input\n      className={ `${classes.basicInput} ${inputClassName}` }\n      {...props}\n    />\n  );\n};\n\nexport default BasicInput;\n","import BasicModal from './BasicModal.jsx';\n\nexport default BasicModal;\n","import React from 'react';\n\nimport classes from './BasicModal.module.css';\n\nconst BasicModal = ({children, visible, setVisible}) => {\n  const rootClasses = [classes.basicModal];\n\n  if (visible) {\n    rootClasses.push(classes.active);\n  }\n\n  return (\n    <div\n      className={rootClasses.join(' ')}\n      onClick={() => setVisible(false)}\n    >\n      <div\n        className={classes.basicModalContent}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n      </div>\n\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import BasicSelect from './BasicSelect.jsx';\n\nexport default BasicSelect;\n","import React from 'react';\n\nimport classes from './BasicSelect.module.css';\n\nconst BasicSelect = ({options, defaultValue, value, onChange}) => {\n\n  return (\n    <select\n      value={value}\n      className={classes.basicSelect}\n      onChange={event => onChange(event.target.value)}\n    >\n      <option disabled value=\"\">{defaultValue}</option>\n      {options.map(option =>\n        <option value={option.value} key={option.value}>\n          {option.name}\n        </option>\n      )}\n    </select>\n  );\n};\n\nexport default BasicSelect;\n","import BasicFooter from './BasicFooter.jsx';\n\nexport default BasicFooter;\n","import React from 'react';\n\nimport classes from './BasicFooter.module.css';\n\nconst BasicFooter = (props) => {\n\n  return (\n    <footer className={classes.basicFooter}>\n      <p>Created 2021 by <a href=\"https://github.com/voverg\" target=\"_blank\" rel=\"noreferrer\">Voverg</a></p>\n    </footer>\n  );\n};\n\nexport default BasicFooter;\n","import Loader from './Loader.jsx';\n\nexport default Loader;\n","import React from 'react';\nimport classes from './Loader.module.css'\n\nconst Loader = (props) => {\n\n  return (\n    <div className={classes.loader}></div>\n  );\n};\n\nexport default Loader;\n","import {createContext} from 'react';\n\nexport const AuthContext = createContext(null);\n","import Navbar from './Navbar.jsx';\n\nexport default Navbar;\n","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nimport classes from './Navbar.module.css';\nimport {BasicButton} from '../';\nimport {AuthContext} from '../../../context';\n\nconst Navbar = (props) => {\n  const className = props.className ? props.className : '';\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.removeItem('auth');\n  }\n\n  return (\n    <div className={ `${classes.navbar} ${className}` }>\n      <Link to=\"/posts\" className={classes.navbar__link}>Посты</Link>\n      <Link to=\"/about\" className={classes.navbar__link}>О блоге</Link>\n\n      <BasicButton\n        className={classes.logout__btn}\n        onClick={logout}\n      >\n        Выйти\n      </BasicButton>\n    </div>\n  );\n};\n\nexport default Navbar;\n","// Принимает общее кол-во постов и их лимит на одной странице. Возвращает кол-во страниц\nexport const getPageCount = (totalCount, limit) => {\n  const pageCount = Math.ceil(totalCount / limit);\n\n  return pageCount;\n}\n\nexport const getPageArray = (totalPages) => {\n  let pagesArray = [];\n\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1);\n  }\n\n  return pagesArray;\n}\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\n\nimport BasicButton from '../BasicButton';\nimport {getPageArray} from '../../../utils';\n\nimport classes from './Pagination.module.css';\n\nconst Pagination = ({totalPages, page, changePage, ...props}) => {\n  const className = props.className ? props.className : '';\n  const pagesArray = getPageArray(totalPages);\n\n  return (\n    <div className={ `${classes.pagination} ${className}` }>\n      {pagesArray.map(pageNumber =>\n        <BasicButton\n          key={pageNumber}\n          className={\n            pageNumber === page\n              ? `${classes.pagination__btn} ${classes.active}`\n              : classes.pagination__btn\n            }\n          onClick={() => changePage(pageNumber)}\n        >\n          {pageNumber}\n        </BasicButton>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, {useContext} from 'react';\n\nimport {BasicHeader, Navbar, BasicFooter} from '../components/UI';\n\nconst About = (props) => {\n\n  return (\n    <div className=\"page\">\n      <BasicHeader>\n        <h1 className=\"page__header-title\">О блоге</h1>\n        <Navbar />\n      </BasicHeader>\n\n      <div className=\"page__content container\">\n        <h2 className=\"page__content-title\">Это учебный проект, созданный на React.</h2>\n        <h3 className=\"\">Здесь вы можете:</h3>\n        <ul className=\"about__list\">\n          <li className=\"about__list-item\">Смотреть списко постов</li>\n          <li className=\"about__list-item\">Смотреть содержимое каждого поста по клику на него</li>\n          <li className=\"about__list-item\">Смотреть комментарии к посту</li>\n          <li className=\"about__list-item\">Осуществлять поиск по названию поста</li>\n          <li className=\"about__list-item\">Выбирать кол-во отображаемых на странице постов</li>\n          <li className=\"about__list-item\">Сортировать список постов по названию, либо описанию</li>\n          <li className=\"about__list-item\">Добавлять пост</li>\n          <li className=\"about__list-item\">Удалять пост</li>\n          <li className=\"about__list-item\">Сайт адаптирован для мобильных устройств</li>\n        </ul>\n      </div>\n\n      <BasicFooter />\n    </div>\n  );\n};\n\nexport default About;\n","import PostService from './PostService.js';\n\nexport default PostService;\n","import axios from 'axios';\n\n// Делает запрос к серверу.\n// Получает номер страницы и лимит постов на странице. Возвращает ответ сервера.\nexport default class PostService {\n  static async getAll(limit=10, page=1) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n      params: {\n        _limit: limit,\n        _page: page,\n      }\n    });\n\n    return response;\n  }\n\n  static async getById(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`, {});\n\n    return response;\n  }\n\n  static async getCommentsByPostId(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`, {});\n\n    return response;\n  }\n}\n","import {useState} from 'react';\n\n// Получает функцию, обрабатывает её. Возвращает обработку функции, состояние загрузки, ошибку\nexport const useFetching = (callback) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return [fetching, isLoading, error];\n}\n","import {useMemo} from 'react';\n\nexport const _useSortedPosts = (posts, sort) => {\n  const getSortedPosts = () => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    } else {\n      return posts;\n    }\n  };\n\n  const sortedPosts = useMemo(getSortedPosts, [sort, posts]);\n\n  return sortedPosts;\n}\n\n// Принимает список постов, метод сортировки, запрос из поиска. Возвращает список постов,\n// отсортированный по методу сортировки и запросу из поискового поля\nexport const usePosts = (posts, sort, query) => {\n  const sortedPosts = _useSortedPosts(posts, sort);\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()));\n  }, [query, sortedPosts]);\n\n  return sortedAndSearchedPosts;\n}\n","import {About, Posts, PostIdPage, Login} from '../pages';\n\nexport const privateRoutes = [\n  {path: '/react-blog/', component: About, exact: true},\n  {path: '/react-blog/posts', component: Posts, exact: true},\n  {path: '/react-blog/posts/:id', component: PostIdPage, exact: true},\n  {path: '/react-blog/about', component: About, exact: false},\n];\n\nexport const publicRoutes = [\n  {path: '/react-blog/login', component: Login, exact: true},\n];\n","import React, {useState, useEffect, useContext, useRef} from 'react';\n\nimport {PostHeader, PostForm, PostList} from '../components';\nimport {BasicModal, Loader, BasicButton, Pagination, BasicFooter} from '../components/UI';\n\nimport PostService from '../API';\nimport {getPageCount} from '../utils';\nimport {useFetching, usePosts, useObserver} from '../hooks';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({sort: '', query: ''});\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const lastElem = useRef();\n\n  // Получаем данные от запроса по API\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    // setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  // useObserver(lastElem, page < totalPages, isPostsLoading, () => {\n  //   setPage(page + 1);\n  // });\n\n  // useEffect(() => {\n  //   var options = {\n  //     root: document,\n  //   }\n  //   var callback = function(entries, observer) {\n  //     if (isPostsLoading) return;\n  //     if (observer.current) observer.current.disconnect();\n  //     /* Content excerpted, show below */\n  //     if (entries[0].isIntersecting && page < totalPages) {\n  //       setPage(page + 1);\n  //       console.log(page);\n  //     }\n  //   };\n  //   observer.current = new IntersectionObserver(callback, options);\n  //   observer.current.observe(lastElem.current);\n  // }, [isPostsLoading]);\n\n  // Выводим посты при загрузке страницы\n  useEffect(() => {\n    fetchPosts();\n  }, [page, limit]);\n\n  // Принимает новый созданный пост. Пересоздаёт массив с добавленным новым постом.\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  // Принимает пост. Пересоздаёт массив с удалённым постом.\n  const removePost = (post) => {\n    setPosts(posts.filter(item => item.id !== post.id));\n  }\n\n  // Изменение номера страницы\n  const changePage = (pageNumber) => {\n    setPage(pageNumber);\n  }\n\n  return (\n    <div className=\"page\">\n      <BasicModal visible={modal} setVisible={setModal}>\n        <PostForm createPost={createPost} visible={modal} />\n      </BasicModal>\n\n      <PostHeader\n        filter={filter}\n        setFilter={setFilter}\n        setModal={setModal}\n      />\n\n      {postError &&\n        <h2 className=\"page__content-title container\">Произошла ошибка {postError}</h2>\n      }\n\n      {isPostsLoading &&\n        <div className=\"post-list container\"><Loader /></div>\n      }\n\n      <PostList\n          posts={sortedAndSearchedPosts}\n          title=\"Список постов\"\n          removePost={removePost}\n          filter={filter}\n          setFilter={setFilter}\n          limit={limit}\n          setLimit={setLimit}\n        />\n        {/*<div ref={lastElem} style={{height: 20, background: 'yellow'}} />*/}\n\n      <Pagination\n        className=\"container\"\n        totalPages={totalPages}\n        page={page}\n        changePage={changePage}\n      />\n\n      <BasicFooter />\n    </div>\n  );\n}\n\nexport default Posts;\n\n","import React, {useState, useEffect, useContext} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {BasicHeader, Navbar, BasicFooter, Loader, BasicButton} from '../components/UI';\nimport PostService from '../API';\nimport {useFetching} from '../hooks';\n\nconst PostIdPage = (props) => {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n\n  // Получаем данные поста от запроса по API\n  const [fetchPostById, isPostLoading, postError] = useFetching(async (id) => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n\n  // Получаем данные комментариев поста от запроса по API\n  const [fetchComments, isCommentsLoading, commentsError] = useFetching(async (id) => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n\n  // Выводим пост при загрузке страницы\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <BasicHeader>\n        <h1 className=\"page__header-title\">Пост с ID = {params.id}</h1>\n        <Navbar />\n      </BasicHeader>\n\n      {isPostLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : <div className=\"page__content container\">\n            <h2 className=\"page__content-title\">{post.title}</h2>\n            <p>{post.body}</p>\n          </div>\n      }\n\n      <h2 className=\"container\">Комментарии</h2>\n      {isPostLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : comments.map(comment =>\n            <div className=\"container\" key={comment.id}>\n              <p><strong>Имя:</strong> {comment.name}</p>\n              <p><strong>Эл. почта:</strong> {comment.email}</p>\n              <p><strong>Комментарий:</strong> {comment.body}</p>\n            </div>\n          )\n      }\n\n      <BasicFooter />\n    </div>\n  );\n};\n\nexport default PostIdPage;\n","import React, {useContext} from 'react';\n\nimport {BasicHeader, BasicFooter, BasicInput, BasicButton} from '../components/UI';\nimport {AuthContext} from '../context';\n\nconst Login = (props) => {\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n\n  const login = (event) => {\n    event.preventDefault();\n\n    setIsAuth(true);\n    localStorage.setItem('auth', 'true');\n  }\n\n  return (\n    <div className=\"page\">\n      <BasicHeader>\n        <h1 className=\"login__title\">Авторизация</h1>\n      </BasicHeader>\n\n      <div className=\"page__content\">\n        <h2 className=\"page__content-title\">Чтобы войти, введите логин и пароль</h2>\n\n        <form className=\"login-form\" onSubmit={login}>\n          <BasicInput\n            type=\"text\"\n            className=\"post-form__input\"\n            placeholder=\"Введите логин...\"\n          />\n          <BasicInput\n            type=\"password\"\n            className=\"post-form__input\"\n            placeholder=\"Введите пароль...\"\n          />\n          <div className=\"post-form__btns\">\n            <BasicButton>Войти</BasicButton>\n          </div>\n        </form>\n\n      </div>\n\n      <BasicFooter />\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useContext} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {Loader} from './UI';\nimport {About, Posts, ErrorPage, PostIdPage} from '../pages';\nimport {privateRoutes, publicRoutes} from '../router';\nimport {AuthContext} from '../context';\n\nconst AppRouter = (props) => {\n  const {isAuth, isLoading} = useContext(AuthContext);\n\n  if (isLoading) {\n    return <div className=\"post-list container\"><Loader /></div>\n  }\n\n  return (\n    isAuth\n      ?\n      <Switch>\n        {privateRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to=\"/react-blog/about\" />\n      </Switch>\n      :\n      <Switch>\n        {publicRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to=\"/react-blog/login\" />\n      </Switch>\n\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport BasicButton from './UI/BasicButton';\n\nconst Post = ({number, removePost, post}) => {\n  const {id, title, body} = post;\n  const router = useHistory();\n\n  return (\n    <div className=\"post\">\n      <div className=\"post__content\" onClick={() => router.push(`/posts/${id}`)}>\n        <h3 className=\"post__title\">{id} {title}</h3>\n        <div>{body}</div>\n      </div>\n      <div className=\"post__btns\">\n        <BasicButton onClick={() => removePost(post)}>Удалить пост</BasicButton>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Post;\n","import React, {useState, useMemo} from 'react';\n\nimport BasicButton from './UI/BasicButton';\nimport BasicInput from './UI/BasicInput';\n\nconst PostForm = ({createPost, visible}) => {\n  const [post, setPost] = useState({title: '', body: ''});\n\n  // Очищаем поля формы, когда она становится невидимой\n  useMemo(() => {\n    if (!visible) {\n      setPost({...post, title: '', body: ''});\n    }\n  }, [visible])\n\n  // Добавить новый пост\n  const addNewPost = (event) => {\n    event.preventDefault();\n    if (!post.title || !post.body) return;\n\n    const newPost = {\n      ...post,\n      id: Date.now(),\n    };\n\n    // Добавляем новый пост в массив с постами\n    createPost(newPost);\n\n    // Очистка полей формы после создания поста\n    // setPost({...post, title: '', body: ''});\n  };\n\n  return (\n    <form className=\"post-form\">\n      <h2 className=\"post-form__title\">Добавить новый пост</h2>\n      <BasicInput\n        type=\"text\"\n        className=\"post-form__input\"\n        placeholder=\"Введите название поста\"\n        value={post.title}\n        onChange={ event => setPost({...post, title: event.target.value}) }\n      />\n      <BasicInput\n        type=\"text\"\n        className=\"post-form__input\"\n        placeholder=\"Введите описание поста\"\n        value={post.body}\n        onChange={ event => setPost({...post, body: event.target.value}) }\n      />\n      <div className=\"post-form__btns\">\n        <BasicButton onClick={addNewPost}>Добавить пост</BasicButton>\n      </div>\n    </form>\n  );\n};\n\nexport default PostForm;\n","import React, {useContext} from 'react';\n\nimport {BasicHeader, Navbar, BasicButton, BasicInput} from './UI';\n\nconst PostHeader = ({filter, setFilter, setModal}) => {\n\n  return (\n    <BasicHeader>\n      <h1 className=\"page__header-title\">Посты</h1>\n      <Navbar />\n\n      <div className=\"page__header-content\">\n        <BasicButton\n          className=\"add-post__btn\"\n          onClick={() => setModal(true)}\n        >\n          Создать пост\n        </BasicButton>\n\n        <BasicInput\n          type=\"text\"\n          className=\"page__header-search\"\n          placeholder=\"Поиск...\"\n          value={filter.query}\n          onChange={ event => setFilter({...filter, query: event.target.value}) }\n        />\n      </div>\n\n    </BasicHeader>\n  );\n};\n\nexport default PostHeader;\n","import React from 'react';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Post from './Post.jsx';\nimport {BasicSelect} from './UI';\n\nconst PostList = ({posts, title, removePost, filter, setFilter, limit, setLimit}) => {\n  if (!posts.length) {\n    return (\n      <div className=\"page__content post-list container\">\n        <h2 className=\"page__content-title\">Постов не найдено</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page__content post-list container\">\n      <div className=\"post-list__header\">\n        <h2 className=\"post-list__title\">{title}</h2>\n\n        <div className=\"post-list__selects\">\n          <BasicSelect\n            defaultValue=\"Кол-во постов\"\n            value={limit}\n            onChange={value => setLimit(value)}\n            options={[\n              {value: 5, name: '5'},\n              {value: 10, name: '10'},\n              {value: 15, name: '15'},\n              {value: 20, name: '20'},\n              {value: -1, name: 'Все посты'},\n            ]}\n          />\n          <BasicSelect\n            defaultValue=\"Сортировка\"\n            value={filter.sort}\n            onChange={ selectedSort => {setFilter({...filter, sort: selectedSort})} }\n            options={[\n              {value: 'title', name: 'По названию'},\n              {value: 'body', name: 'По описанию'},\n            ]}\n          />\n        </div>\n\n      </div>\n\n      <TransitionGroup>\n        {posts.map((post, index) =>\n          <CSSTransition\n            key={post.id}\n            timeout={100}\n            classNames=\"post\"\n          >\n            <Post number={index+1} post={post} removePost={removePost} />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n\n    </div>\n  );\n\n};\n\nexport default PostList;\n","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {AppRouter} from './components';\nimport {AuthContext} from './context';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setIsAuth(true);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading,\n    }}>\n\n      <BrowserRouter>\n        <AppRouter />\n      </BrowserRouter>\n\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}