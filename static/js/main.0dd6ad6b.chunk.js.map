{"version":3,"sources":["components/UI/Navbar/Navbar.module.css","components/UI/Pagination/Pagination.module.css","components/UI/BasicModal/BasicModal.module.css","components/UI/BasicHeader/BasicHeader.module.css","components/UI/BasicButton/BasicButton.module.css","components/UI/BasicInput/BasicInput.module.css","components/UI/BasicSelect/BasicSelect.module.css","components/UI/BasicFooter/BasicFooter.module.css","components/UI/Loader/Loader.module.css","components/UI/BasicButton/index.js","components/UI/BasicButton/BasicButton.jsx","components/UI/BasicHeader/index.js","components/UI/BasicHeader/BasicHeader.jsx","components/UI/BasicInput/index.js","components/UI/BasicInput/BasicInput.jsx","components/UI/BasicModal/index.js","components/UI/BasicModal/BasicModal.jsx","components/UI/BasicSelect/index.js","components/UI/BasicSelect/BasicSelect.jsx","components/UI/BasicFooter/index.js","components/UI/BasicFooter/BasicFooter.jsx","components/UI/Loader/index.js","components/UI/Loader/Loader.jsx","context/index.js","pages/About.jsx","API/index.js","API/PostService.js","utils/pages.js","hooks/useFetching.js","hooks/usePosts.js","pages/Login.jsx","pages/PostIdPage.jsx","router/index.js","pages/Posts.jsx","components/UI/Navbar/index.js","components/UI/Navbar/Navbar.jsx","components/UI/Pagination/index.js","components/UI/Pagination/Pagination.jsx","components/AppRouter.jsx","components/Post.jsx","components/PostForm.jsx","components/PostHeader.jsx","components/PostList.jsx","App.js","index.js"],"names":["module","exports","BasicButton","children","props","className","classes","basicButton","BasicHeader","basicHeader","basicHeader__container","BasicInput","inputClassName","basicInput","BasicModal","visible","setVisible","rootClasses","basicModal","push","active","join","onClick","basicModalContent","event","stopPropagation","BasicSelect","options","defaultValue","value","onChange","basicSelect","target","disabled","map","option","name","BasicFooter","basicFooter","href","rel","Loader","loader","AuthContext","createContext","About","PostService","limit","page","axios","get","params","_limit","_page","response","id","getPageCount","totalCount","Math","ceil","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","usePosts","posts","sort","query","sortedPosts","useMemo","b","localeCompare","_useSortedPosts","filter","post","title","toLowerCase","includes","Login","useContext","setIsAuth","isAuth","username","setUsername","password","setPassword","onSubmit","preventDefault","localStorage","setItem","type","placeholder","PostIdPage","useParams","setPost","comments","setComments","getById","data","fetchPostById","isPostLoading","getCommentsByPostId","fetchComments","useEffect","body","comment","email","routeNames","privateRoutes","path","component","setPosts","setFilter","modal","setModal","totalPages","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","useRef","getAll","headers","fetchPosts","isPostsLoading","postError","createPost","newPost","removePost","item","changePage","pageNumber","exact","publicRoutes","Navbar","navbar","to","navbar__link","logout__btn","removeItem","Pagination","pagesArray","i","getPageArray","pagination","pagination__btn","AppRouter","route","Post","number","router","useHistory","PostForm","required","Date","now","PostHeader","PostList","length","selectedSort","TransitionGroup","index","CSSTransition","timeout","classNames","App","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,YAAc,8B,mBCA5GD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,gBAAkB,oCAAoC,OAAS,6B,mBCA7HD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,OAAS,6B,mBCAjID,EAAOC,QAAU,CAAC,YAAc,iCAAiC,uBAAyB,8C,mBCA1FD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,qJCC5CC,ECEK,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,4BACxCC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAEpD,OACE,kDAAYD,GAAZ,IAAmBC,UAAS,UAAMC,IAAQC,YAAd,YAA6BF,GAAzD,SACGF,M,iBCPQK,ECEK,SAAC,GAA0B,IAAzBL,EAAwB,EAAxBA,SAAaC,EAAW,4BACtCC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAEtD,OACE,qBAAKA,UAAS,UAAMC,IAAQG,YAAd,YAA6BJ,GAA3C,SACE,qBAAKA,UAAWC,IAAQI,uBAAxB,SACGP,O,iBCRMQ,ECEI,SAAC,GAA2B,IAA1BN,EAAyB,EAAzBA,UAAcD,EAAW,6BACtCQ,EAAiBP,GAAwB,GAE/C,OACE,mCACEA,UAAS,UAAMC,IAAQO,WAAd,YAA4BD,IACjCR,K,iBCRKU,ECEI,SAAC,GAAqC,IAApCX,EAAmC,EAAnCA,SAAUY,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAChCC,EAAc,CAACX,IAAQY,YAM7B,OAJIH,GACFE,EAAYE,KAAKb,IAAQc,QAIzB,qBACEf,UAAWY,EAAYI,KAAK,KAC5BC,QAAS,kBAAMN,GAAW,IAF5B,SAIE,qBACEX,UAAWC,IAAQiB,kBACnBD,QAAS,SAACE,GAAD,OAAWA,EAAMC,mBAF5B,SAIGtB,O,iBClBMuB,ECEK,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAElD,OACE,yBACED,MAAOA,EACPxB,UAAWC,IAAQyB,YACnBD,SAAU,SAAAN,GAAK,OAAIM,EAASN,EAAMQ,OAAOH,QAH3C,UAKE,wBAAQI,UAAQ,EAACJ,MAAM,GAAvB,SAA2BD,IAC1BD,EAAQO,KAAI,SAAAC,GAAM,OACjB,wBAAQN,MAAOM,EAAON,MAAtB,SACGM,EAAOC,MADwBD,EAAON,c,iBCZlCQ,ECEK,SAACjC,GAEnB,OACE,wBAAQC,UAAWC,IAAQgC,YAA3B,SACE,iDAAmB,mBAAGC,KAAK,4BAA4BP,OAAO,SAASQ,IAAI,aAAxD,0B,iBCNVC,ECCA,SAACrC,GAEd,OACE,qBAAKC,UAAWC,IAAQoC,U,iBCJfC,EAAcC,wBAAc,MCgC1BC,EA9BD,SAACzC,GAEb,OACE,sBAAKC,UAAU,OAAf,UACE,eAAC,EAAD,WACE,oBAAIA,UAAU,qBAAd,mDACA,cAAC,GAAD,OAGF,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,sBAAd,4LACA,oBAAIA,UAAU,GAAd,+FACA,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,mBAAd,wIACA,oBAAIA,UAAU,mBAAd,uRACA,oBAAIA,UAAU,mBAAd,uKACA,oBAAIA,UAAU,mBAAd,kNACA,oBAAIA,UAAU,mBAAd,0QACA,oBAAIA,UAAU,mBAAd,mSACA,oBAAIA,UAAU,mBAAd,6FACA,oBAAIA,UAAU,mBAAd,iFACA,oBAAIA,UAAU,mBAAd,gPAIJ,cAAC,EAAD,Q,iEC3BSyC,E,kICGb,2GAAoBC,EAApB,+BAA0B,GAAIC,EAA9B,+BAAmC,EAAnC,SACyBC,IAAMC,IAAI,6CAA8C,CAC7EC,OAAQ,CACNC,OAAQL,EACRM,MAAOL,KAJb,cACQM,EADR,yBAQSA,GART,2C,kHAWA,WAAqBC,GAArB,uFACyBN,IAAMC,IAAN,qDAAwDK,GAAM,IADvF,cACQD,EADR,yBAGSA,GAHT,2C,+HAMA,WAAiCC,GAAjC,uFACyBN,IAAMC,IAAN,qDAAwDK,EAAxD,aAAuE,IADhG,cACQD,EADR,yBAGSA,GAHT,2C,8DCrBWE,EAAe,SAACC,EAAYV,GAGvC,OAFkBW,KAAKC,KAAKF,EAAaV,ICC9Ba,EAAc,SAACC,GAAc,IAAD,EACLC,oBAAS,GADJ,mBAChCC,EADgC,KACrBC,EADqB,OAEbF,mBAAS,IAFI,mBAEhCG,EAFgC,KAEzBC,EAFyB,KAevC,MAAO,CAXO,uCAAG,sCAAAC,EAAA,sEAEbH,GAAa,GAFA,SAGPH,EAAQ,WAAR,KAHO,sDAKbK,EAAS,KAAME,SALF,uBAObJ,GAAa,GAPA,0EAAH,qDAWID,EAAWE,ICAlBI,EAAW,SAACC,EAAOC,EAAMC,GACpC,IAAMC,EAjBuB,SAACH,EAAOC,GAWrC,OAFoBG,mBARG,WACrB,OAAIH,EACK,YAAID,GAAOC,MAAK,SAACJ,EAAGQ,GAAJ,OAAUR,EAAEI,GAAMK,cAAcD,EAAEJ,OAElDD,IAIiC,CAACC,EAAMD,IAQ/BO,CAAgBP,EAAOC,GAM3C,OAJ+BG,mBAAQ,WACrC,OAAOD,EAAYK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,cAAcC,SAASV,EAAMS,oBACzE,CAACT,EAAOC,KCkCEU,EApDD,SAAC/E,GAAW,IAAD,EACKgF,qBAAWzC,GAAxB0C,GADQ,EAChBC,OADgB,EACRD,WADQ,EAESvB,mBAAS,IAFlB,mBAEhByB,EAFgB,KAENC,EAFM,OAGS1B,mBAAS,IAHlB,mBAGhB2B,EAHgB,KAGNC,EAHM,KAcvB,OACE,sBAAKrF,UAAU,OAAf,UACE,cAAC,EAAD,UACE,oBAAIA,UAAU,eAAd,kFAGF,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,sBAAd,2JACA,mBAAGA,UAAU,sBAAb,qIACA,oBAAGA,UAAU,sBAAb,6CAA0C,qCAA1C,0CAA8D,uCAE9D,uBAAMA,UAAU,aAAasF,SApBrB,SAACnE,GACbA,EAAMoE,iBACDL,GAAaE,IAElBJ,GAAU,GACVQ,aAAaC,QAAQ,WAAY,QACjCD,aAAaC,QAAQ,eAAgBP,KAcjC,UACE,cAAC,EAAD,CACEQ,KAAK,OACL1F,UAAU,mBACVwB,MAAO0D,EACPzD,SAAU,SAACN,GAAD,OAAWgE,EAAYhE,EAAMQ,OAAOH,QAC9CmE,YAAY,iFAEd,cAAC,EAAD,CACED,KAAK,WACL1F,UAAU,mBACVwB,MAAO4D,EACP3D,SAAU,SAACN,GAAD,OAAWkE,EAAYlE,EAAMQ,OAAOH,QAC9CmE,YAAY,uFAEd,qBAAK3F,UAAU,kBAAf,SACE,cAAC,EAAD,qDAMN,cAAC,EAAD,QCUS4F,EAvDI,SAAC7F,GAClB,IAAM+C,EAAS+C,cADa,EAEJpC,mBAAS,IAFL,mBAErBiB,EAFqB,KAEfoB,EAFe,OAGIrC,mBAAS,IAHb,mBAGrBsC,EAHqB,KAGXC,EAHW,OAMsBzC,EAAW,uCAAC,WAAOL,GAAP,eAAAY,EAAA,sEACrCrB,EAAYwD,QAAQ/C,GADiB,OACtDD,EADsD,OAE5D6C,EAAQ7C,EAASiD,MAF2C,2CAAD,uDANjC,mBAMrBC,EANqB,KAMNC,EANM,aAY8B7C,EAAW,uCAAC,WAAOL,GAAP,eAAAY,EAAA,sEAC7CrB,EAAY4D,oBAAoBnD,GADa,OAC9DD,EAD8D,OAEpE+C,EAAY/C,EAASiD,MAF+C,2CAAD,wDAZzC,mBAYrBI,EAZqB,eAuB5B,OALAC,qBAAU,WACRJ,EAAcrD,EAAOI,IACrBoD,EAAcxD,EAAOI,MACpB,IAGD,sBAAKlD,UAAU,OAAf,UACE,eAAC,EAAD,WACE,qBAAIA,UAAU,qBAAd,kDAAgD8C,EAAOI,MACvD,cAAC,GAAD,OAGDkD,EACG,qBAAKpG,UAAU,8BAAf,SAA6C,cAAC,EAAD,MAC7C,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqC0E,EAAKC,QAC1C,4BAAID,EAAK8B,UAIf,oBAAIxG,UAAU,YAAd,gFACCoG,EACG,qBAAKpG,UAAU,8BAAf,SAA6C,cAAC,EAAD,MAC7C+F,EAASlE,KAAI,SAAA4E,GAAO,OAClB,sBAAKzG,UAAU,YAAf,UACE,8BAAG,yDAAH,IAA0ByG,EAAQ1E,QAClC,8BAAG,mFAAH,IAAgC0E,EAAQC,SACxC,8BAAG,yGAAH,IAAkCD,EAAQD,UAHZC,EAAQvD,OAQ9C,cAAC,EAAD,QCvDOyD,EACJ,qBADIA,EAEJ,qBAFIA,EAGJ,qBAGIC,GAAgB,CAC3B,CAACC,KAAMF,EAAkBG,UCAb,WAAO,IAAD,EACQrD,mBAAS,IADjB,mBACXQ,EADW,KACJ8C,EADI,OAEUtD,mBAAS,CAACS,KAAM,GAAIC,MAAO,KAFrC,mBAEXM,EAFW,KAEHuC,EAFG,OAGQvD,oBAAS,GAHjB,mBAGXwD,EAHW,KAGJC,EAHI,OAIkBzD,mBAAS,GAJ3B,mBAIX0D,EAJW,KAICC,EAJD,OAKQ3D,mBAAS,IALjB,mBAKXf,EALW,KAKJ2E,EALI,OAMM5D,mBAAS,GANf,mBAMXd,EANW,KAML2E,EANK,KAOZC,EAAyBvD,EAASC,EAAOQ,EAAOP,KAAMO,EAAON,OAPjD,GASDqD,mBAG+BjE,EAAW,sBAAC,8BAAAO,EAAA,sEACnCrB,EAAYgF,OAAO/E,EAAOC,GADS,OACpDM,EADoD,OAE1D8D,EAAS9D,EAASiD,MAEZ9C,EAAaH,EAASyE,QAAQ,iBACpCN,EAAcjE,EAAaC,EAAYV,IALmB,6CAZ1C,mBAYXiF,EAZW,KAYCC,EAZD,KAYiBC,EAZjB,KA0ClBtB,qBAAU,WACRoB,MACC,CAAChF,EAAMD,IAkBV,OACE,sBAAK1C,UAAU,OAAf,UACE,cAAC,EAAD,CAAYU,QAASuG,EAAOtG,WAAYuG,EAAxC,SACE,cAAC,GAAD,CAAUY,WAlBG,SAACC,GAClBhB,EAAS,GAAD,mBAAK9C,GAAL,CAAY8D,KACpBb,GAAS,IAgB6BxG,QAASuG,MAG7C,cAAC,GAAD,CACExC,OAAQA,EACRuC,UAAWA,EACXE,SAAUA,IAGXW,GACC,qBAAI7H,UAAU,gCAAd,yGAAgE6H,KAGjED,EACC,qBAAK5H,UAAU,sBAAf,SAAqC,cAAC,EAAD,MAErC,cAAC,GAAD,CACIiE,MAAOsD,EACP5C,MAAM,4EACNqD,WA/BS,SAACtD,GAClBqC,EAAS9C,EAAMQ,QAAO,SAAAwD,GAAI,OAAIA,EAAK/E,KAAOwB,EAAKxB,QA+BvCuB,OAAQA,EACRuC,UAAWA,EACXtE,MAAOA,EACP2E,SAAUA,IAKhB,cAAC,GAAD,CACErH,UAAU,YACVmH,WAAYA,EACZxE,KAAMA,EACNuF,WAvCa,SAACC,GAClBb,EAAQa,MAyCN,cAAC,EAAD,QDpGuCC,OAAO,GAClD,CAACvB,KAAK,GAAD,OAAKF,EAAL,OAA4BG,UAAWlB,EAAYwC,OAAO,GAC/D,CAACvB,KAAMF,EAAkBG,UAAWtE,EAAO4F,OAAO,IAGvCC,GAAe,CAC1B,CAACxB,KAAMF,EAAkBG,UAAWhC,EAAOsD,OAAO,IEbrCE,GCOA,SAACvI,GACd,IAAMC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAD9B,EAEc+E,qBAAWzC,GAAlC0C,GAFS,EAEjBC,OAFiB,EAETD,WAFS,EAEEE,SAQ1B,OACE,sBAAKlF,UAAS,UAAMC,IAAQsI,OAAd,YAAwBvI,GAAtC,UACA,cAAC,IAAD,CAAMwI,GAAI7B,EAAkB3G,UAAWC,IAAQwI,aAA/C,4CACE,cAAC,IAAD,CAAMD,GAAI7B,EAAkB3G,UAAWC,IAAQwI,aAA/C,mDAEA,cAAC,EAAD,CACEzI,UAAWC,IAAQyI,YACnBzH,QAbS,WACb+D,GAAU,GACVQ,aAAamD,WAAW,YACxBnD,aAAamD,WAAW,iBAQtB,gD,oBCtBSC,GCKI,SAAC,GAA8C,IAA7CzB,EAA4C,EAA5CA,WAAYxE,EAAgC,EAAhCA,KAAMuF,EAA0B,EAA1BA,WAAenI,EAAW,kDACzDC,EAAYD,EAAMC,UAAYD,EAAMC,UAAY,GAChD6I,EVFoB,SAAC1B,GAG3B,IAFA,IAAI0B,EAAa,GAERC,EAAI,EAAGA,EAAI3B,EAAY2B,IAC9BD,EAAW/H,KAAKgI,EAAI,GAGtB,OAAOD,EULYE,CAAa5B,GAEhC,OACE,qBAAKnH,UAAS,UAAMC,KAAQ+I,WAAd,YAA4BhJ,GAA1C,SACG6I,EAAWhH,KAAI,SAAAsG,GAAU,OACxB,cAAC,EAAD,CAEEnI,UACEmI,IAAexF,EAAf,UACO1C,KAAQgJ,gBADf,YACkChJ,KAAQc,QACtCd,KAAQgJ,gBAEdhI,QAAS,kBAAMiH,EAAWC,IAP5B,SASGA,GARIA,SC8BAe,GArCG,SAACnJ,GAAW,IAAD,EACCgF,qBAAWzC,GAAhC2C,EADoB,EACpBA,OAEP,OAH2B,EACZvB,UAGN,qBAAK1D,UAAU,sBAAf,SAAqC,cAAC,EAAD,MAI5CiF,EAEE,eAAC,IAAD,WACG2B,GAAc/E,KAAI,SAAAsH,GAAK,OACtB,cAAC,IAAD,CAEEtC,KAAMsC,EAAMtC,KACZC,UAAWqC,EAAMrC,UACjBsB,MAAOe,EAAMf,OAHRe,EAAMtC,SAMf,cAAC,IAAD,CAAU2B,GAAI7B,OAGhB,eAAC,IAAD,WACG0B,GAAaxG,KAAI,SAAAsH,GAAK,OACrB,cAAC,IAAD,CAEEtC,KAAMsC,EAAMtC,KACZC,UAAWqC,EAAMrC,UACjBsB,MAAOe,EAAMf,OAHRe,EAAMtC,SAMf,cAAC,IAAD,CAAU2B,GAAI7B,QChBPyC,GAlBF,SAAC,GAA+B,EAA9BC,OAA+B,IAAvBrB,EAAsB,EAAtBA,WAAYtD,EAAU,EAAVA,KAC1BxB,EAAmBwB,EAAnBxB,GAAIyB,EAAeD,EAAfC,MAAO6B,EAAQ9B,EAAR8B,KACZ8C,EAASC,cAEf,OACE,sBAAKvJ,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAgBiB,QAAS,kBAAMqI,EAAOxI,KAAP,4BAAiCoC,KAA/E,UACE,qBAAIlD,UAAU,cAAd,UAA6BkD,EAA7B,IAAkCyB,KAClC,8BAAM6B,OAER,qBAAKxG,UAAU,aAAf,SACE,cAAC,EAAD,CAAaiB,QAAS,kBAAM+G,EAAWtD,IAAvC,uFC0CO8E,GArDE,SAAC,GAA2B,IAA1B1B,EAAyB,EAAzBA,WAAYpH,EAAa,EAAbA,QAAa,EAClB+C,mBAAS,CAACkB,MAAO,GAAI6B,KAAM,KADT,mBACnC9B,EADmC,KAC7BoB,EAD6B,KAI1CzB,mBAAQ,WACD3D,GACHoF,EAAQ,2BAAIpB,GAAL,IAAWC,MAAO,GAAI6B,KAAM,QAEpC,CAAC9F,IAmBJ,OACE,uBAAMV,UAAU,YAAhB,UACE,oBAAIA,UAAU,mBAAd,sHACA,cAAC,EAAD,CACE0F,KAAK,OACL1F,UAAU,mBACV2F,YAAY,6HACZnE,MAAOkD,EAAKC,MACZlD,SAAW,SAAAN,GAAK,OAAI2E,EAAQ,2BAAIpB,GAAL,IAAWC,MAAOxD,EAAMQ,OAAOH,UAC1DiI,UAAU,IAEZ,cAAC,EAAD,CACE/D,KAAK,OACL1F,UAAU,mBACV2F,YAAY,6HACZnE,MAAOkD,EAAK8B,KACZ/E,SAAW,SAAAN,GAAK,OAAI2E,EAAQ,2BAAIpB,GAAL,IAAW8B,KAAMrF,EAAMQ,OAAOH,UACzDiI,UAAU,IAEZ,qBAAKzJ,UAAU,kBAAf,SACE,cAAC,EAAD,CAAaiB,QApCA,SAACE,GAElB,GADAA,EAAMoE,iBACDb,EAAKC,OAAUD,EAAK8B,KAAzB,CAEA,IAAMuB,EAAO,2BACRrD,GADQ,IAEXxB,GAAIwG,KAAKC,QAIX7B,EAAWC,KA0BP,6FCpBO6B,GA5BI,SAAC,GAAmC,IAAlCnF,EAAiC,EAAjCA,OAAQuC,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,SAEtC,OACE,eAAC,EAAD,WACE,oBAAIlH,UAAU,qBAAd,4CACA,cAAC,GAAD,IAEA,sBAAKA,UAAU,uBAAf,UACE,cAAC,EAAD,CACEA,UAAU,gBACViB,QAAS,kBAAMiG,GAAS,IAF1B,iFAOA,cAAC,EAAD,CACExB,KAAK,OACL1F,UAAU,sBACV2F,YAAY,oCACZnE,MAAOiD,EAAON,MACd1C,SAAW,SAAAN,GAAK,OAAI6F,EAAU,2BAAIvC,GAAL,IAAaN,MAAOhD,EAAMQ,OAAOH,mB,kBCuCzDqI,GAzDE,SAAC,GAAoE,IAAnE5F,EAAkE,EAAlEA,MAAOU,EAA2D,EAA3DA,MAAOqD,EAAoD,EAApDA,WAAYvD,EAAwC,EAAxCA,OAAQuC,EAAgC,EAAhCA,UAAWtE,EAAqB,EAArBA,MAAO2E,EAAc,EAAdA,SACrE,OAAKpD,EAAM6F,OAST,sBAAK9J,UAAU,oCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkC2E,IAElC,sBAAK3E,UAAU,qBAAf,UACE,cAAC,EAAD,CACEuB,aAAa,uEACbC,MAAOkB,EACPjB,SAAU,SAAAD,GAAK,OAAI6F,EAAS7F,IAC5BF,QAAS,CACP,CAACE,MAAO,EAAGO,KAAM,KACjB,CAACP,MAAO,GAAIO,KAAM,MAClB,CAACP,MAAO,GAAIO,KAAM,MAClB,CAACP,MAAO,GAAIO,KAAM,MAClB,CAACP,OAAQ,EAAGO,KAAM,wDAGtB,cAAC,EAAD,CACER,aAAa,+DACbC,MAAOiD,EAAOP,KACdzC,SAAW,SAAAsI,GAAiB/C,EAAU,2BAAIvC,GAAL,IAAaP,KAAM6F,MACxDzI,QAAS,CACP,CAACE,MAAO,QAASO,KAAM,iEACvB,CAACP,MAAO,OAAQO,KAAM,0EAO9B,cAACiI,GAAA,EAAD,UACG/F,EAAMpC,KAAI,SAAC6C,EAAMuF,GAAP,OACT,cAACC,GAAA,EAAD,CAEEC,QAAS,IACTC,WAAW,OAHb,SAKE,cAAC,GAAD,CAAMf,OAAQY,EAAM,EAAGvF,KAAMA,EAAMsD,WAAYA,KAJ1CtD,EAAKxB,YAxChB,qBAAKlD,UAAU,oCAAf,SACE,oBAAIA,UAAU,sBAAd,6GC4BOqK,I,MA9BH,WAAO,IAAD,EACY5G,oBAAS,GADrB,mBACTwB,EADS,KACDD,EADC,OAEkBvB,oBAAS,GAF3B,mBAETC,EAFS,KAEEC,EAFF,OAGgBF,mBAAS,IAHzB,mBAGTyB,EAHS,KAGCC,EAHD,KAchB,OATAoB,qBAAU,WACJf,aAAa8E,QAAQ,cACvBtF,GAAU,GACVG,EAAYK,aAAa8E,QAAQ,kBAGnC3G,GAAa,KACZ,IAGD,cAACrB,EAAYiI,SAAb,CAAsB/I,MAAO,CAC3ByD,SACAD,YACAtB,YACAwB,YAJF,SAOE,cAAC,IAAD,UACE,cAAC,GAAD,UC3BRsF,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0dd6ad6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1fiE_\",\"navbar__link\":\"Navbar_navbar__link__1kqSJ\",\"logout__btn\":\"Navbar_logout__btn__3GsPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2krJz\",\"pagination__btn\":\"Pagination_pagination__btn__118U1\",\"active\":\"Pagination_active__1jy7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicModal\":\"BasicModal_basicModal__2bL6e\",\"basicModalContent\":\"BasicModal_basicModalContent__35Ict\",\"active\":\"BasicModal_active__zWHkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicHeader\":\"BasicHeader_basicHeader__zrxC2\",\"basicHeader__container\":\"BasicHeader_basicHeader__container__1mv3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicButton\":\"BasicButton_basicButton__258mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicInput\":\"BasicInput_basicInput__1wrLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicSelect\":\"BasicSelect_basicSelect__2gC4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicFooter\":\"BasicFooter_basicFooter__19t_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1lNMe\",\"rotate\":\"Loader_rotate__2xdLR\"};","import BasicButton from './BasicButton.jsx';\n\nexport default BasicButton;\n","import React from 'react';\n\nimport classes from './BasicButton.module.css';\n\nconst BasicButton = ({children, ...props}) => {\nconst className = props.className ? props.className : '';\n\n  return (\n    <button {...props} className={ `${classes.basicButton} ${className}` }>\n      {children}\n    </button>\n  );\n};\n\nexport default BasicButton;\n","import BasicHeader from './BasicHeader.jsx';\n\nexport default BasicHeader;\n","import React from 'react';\n\nimport classes from './BasicHeader.module.css';\n\nconst BasicHeader = ({children, ...props}) => {\n  const className = props.className ? props.className : '';\n\n  return (\n    <div className={ `${classes.basicHeader} ${className}` }>\n      <div className={classes.basicHeader__container}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default BasicHeader;\n","import BasicInput from './BasicInput.jsx';\n\nexport default BasicInput;\n","import React from 'react';\n\nimport classes from './BasicInput.module.css';\n\nconst BasicInput = ({className, ...props}) => {\n  const inputClassName = className ? className : '';\n\n  return (\n    <input\n      className={ `${classes.basicInput} ${inputClassName}` }\n      {...props}\n    />\n  );\n};\n\nexport default BasicInput;\n","import BasicModal from './BasicModal.jsx';\n\nexport default BasicModal;\n","import React from 'react';\n\nimport classes from './BasicModal.module.css';\n\nconst BasicModal = ({children, visible, setVisible}) => {\n  const rootClasses = [classes.basicModal];\n\n  if (visible) {\n    rootClasses.push(classes.active);\n  }\n\n  return (\n    <div\n      className={rootClasses.join(' ')}\n      onClick={() => setVisible(false)}\n    >\n      <div\n        className={classes.basicModalContent}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n      </div>\n\n    </div>\n  );\n};\n\nexport default BasicModal;\n","import BasicSelect from './BasicSelect.jsx';\n\nexport default BasicSelect;\n","import React from 'react';\n\nimport classes from './BasicSelect.module.css';\n\nconst BasicSelect = ({options, defaultValue, value, onChange}) => {\n\n  return (\n    <select\n      value={value}\n      className={classes.basicSelect}\n      onChange={event => onChange(event.target.value)}\n    >\n      <option disabled value=\"\">{defaultValue}</option>\n      {options.map(option =>\n        <option value={option.value} key={option.value}>\n          {option.name}\n        </option>\n      )}\n    </select>\n  );\n};\n\nexport default BasicSelect;\n","import BasicFooter from './BasicFooter.jsx';\n\nexport default BasicFooter;\n","import React from 'react';\n\nimport classes from './BasicFooter.module.css';\n\nconst BasicFooter = (props) => {\n\n  return (\n    <footer className={classes.basicFooter}>\n      <p>Created 2021 by <a href=\"https://github.com/voverg\" target=\"_blank\" rel=\"noreferrer\">Voverg</a></p>\n    </footer>\n  );\n};\n\nexport default BasicFooter;\n","import Loader from './Loader.jsx';\n\nexport default Loader;\n","import React from 'react';\nimport classes from './Loader.module.css'\n\nconst Loader = (props) => {\n\n  return (\n    <div className={classes.loader}></div>\n  );\n};\n\nexport default Loader;\n","import {createContext} from 'react';\n\nexport const AuthContext = createContext(null);\n","import React, {useContext} from 'react';\n\nimport {BasicHeader, Navbar, BasicFooter} from '../components/UI';\n\nconst About = (props) => {\n\n  return (\n    <div className=\"page\">\n      <BasicHeader>\n        <h1 className=\"page__header-title\">О блоге</h1>\n        <Navbar />\n      </BasicHeader>\n\n      <div className=\"page__content container\">\n        <h2 className=\"page__content-title\">Это учебный проект, созданный на React.</h2>\n        <h3 className=\"\">Здесь вы можете:</h3>\n        <ul className=\"about__list\">\n          <li className=\"about__list-item\">Смотреть списко постов</li>\n          <li className=\"about__list-item\">Смотреть содержимое каждого поста по клику на него</li>\n          <li className=\"about__list-item\">Смотреть комментарии к посту</li>\n          <li className=\"about__list-item\">Осуществлять поиск по названию поста</li>\n          <li className=\"about__list-item\">Выбирать кол-во отображаемых на странице постов</li>\n          <li className=\"about__list-item\">Сортировать список постов по названию, либо описанию</li>\n          <li className=\"about__list-item\">Добавлять пост</li>\n          <li className=\"about__list-item\">Удалять пост</li>\n          <li className=\"about__list-item\">Сайт адаптирован для мобильных устройств</li>\n        </ul>\n      </div>\n\n      <BasicFooter />\n    </div>\n  );\n};\n\nexport default About;\n","import PostService from './PostService.js';\n\nexport default PostService;\n","import axios from 'axios';\n\n// Делает запрос к серверу.\n// Получает номер страницы и лимит постов на странице. Возвращает ответ сервера.\nexport default class PostService {\n  static async getAll(limit=10, page=1) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n      params: {\n        _limit: limit,\n        _page: page,\n      }\n    });\n\n    return response;\n  }\n\n  static async getById(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`, {});\n\n    return response;\n  }\n\n  static async getCommentsByPostId(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`, {});\n\n    return response;\n  }\n}\n","// Принимает общее кол-во постов и их лимит на одной странице. Возвращает кол-во страниц\nexport const getPageCount = (totalCount, limit) => {\n  const pageCount = Math.ceil(totalCount / limit);\n\n  return pageCount;\n}\n\nexport const getPageArray = (totalPages) => {\n  let pagesArray = [];\n\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1);\n  }\n\n  return pagesArray;\n}\n","import {useState} from 'react';\n\n// Получает функцию, обрабатывает её. Возвращает обработку функции, состояние загрузки, ошибку\nexport const useFetching = (callback) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return [fetching, isLoading, error];\n}\n","import {useMemo} from 'react';\n\nexport const _useSortedPosts = (posts, sort) => {\n  const getSortedPosts = () => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    } else {\n      return posts;\n    }\n  };\n\n  const sortedPosts = useMemo(getSortedPosts, [sort, posts]);\n\n  return sortedPosts;\n}\n\n// Принимает список постов, метод сортировки, запрос из поиска. Возвращает список постов,\n// отсортированный по методу сортировки и запросу из поискового поля\nexport const usePosts = (posts, sort, query) => {\n  const sortedPosts = _useSortedPosts(posts, sort);\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()));\n  }, [query, sortedPosts]);\n\n  return sortedAndSearchedPosts;\n}\n","import React, {useState, useContext} from 'react';\n\nimport {BasicHeader, BasicFooter, BasicInput, BasicButton} from '../components/UI';\nimport {AuthContext} from 'context';\n\nconst Login = (props) => {\n  const {isAuth, setIsAuth} = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const login = (event) => {\n    event.preventDefault();\n    if (!username || !password) return;\n\n    setIsAuth(true);\n    localStorage.setItem('blogAuth', 'true');\n    localStorage.setItem('blogUsername', username);\n  }\n\n  return (\n    <div className=\"page\">\n      <BasicHeader>\n        <h1 className=\"login__title\">Авторизация</h1>\n      </BasicHeader>\n\n      <div className=\"page__content\">\n        <h2 className=\"page__content-title\">Авторизуйтесь, чтобы войти</h2>\n        <p className=\"page__content-title\">Для демо входа введите: </p>\n        <p className=\"page__content-title\">Логин: <b>user</b> Пароль: <b>123</b></p>\n\n        <form className=\"login-form\" onSubmit={login}>\n          <BasicInput\n            type=\"text\"\n            className=\"post-form__input\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n            placeholder=\"Введите логин...\"\n          />\n          <BasicInput\n            type=\"password\"\n            className=\"post-form__input\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            placeholder=\"Введите пароль...\"\n          />\n          <div className=\"post-form__btns\">\n            <BasicButton>Войти</BasicButton>\n          </div>\n        </form>\n\n      </div>\n\n      <BasicFooter />\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useState, useEffect, useContext} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {BasicHeader, Navbar, BasicFooter, Loader, BasicButton} from '../components/UI';\nimport PostService from '../API';\nimport {useFetching} from '../hooks';\n\nconst PostIdPage = (props) => {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n\n  // Получаем данные поста от запроса по API\n  const [fetchPostById, isPostLoading, postError] = useFetching(async (id) => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n\n  // Получаем данные комментариев поста от запроса по API\n  const [fetchComments, isCommentsLoading, commentsError] = useFetching(async (id) => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n\n  // Выводим пост при загрузке страницы\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <BasicHeader>\n        <h1 className=\"page__header-title\">Пост с ID = {params.id}</h1>\n        <Navbar />\n      </BasicHeader>\n\n      {isPostLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : <div className=\"page__content container\">\n            <h2 className=\"page__content-title\">{post.title}</h2>\n            <p>{post.body}</p>\n          </div>\n      }\n\n      <h2 className=\"container\">Комментарии</h2>\n      {isPostLoading\n        ? <div className=\"post-list post-list__loader\"><Loader /></div>\n        : comments.map(comment =>\n            <div className=\"container\" key={comment.id}>\n              <p><strong>Имя:</strong> {comment.name}</p>\n              <p><strong>Эл. почта:</strong> {comment.email}</p>\n              <p><strong>Комментарий:</strong> {comment.body}</p>\n            </div>\n          )\n      }\n\n      <BasicFooter />\n    </div>\n  );\n};\n\nexport default PostIdPage;\n","import {About, Posts, PostIdPage, Login} from 'pages';\n\nexport const routeNames = {\n  ABOUT: '/react-blog/about/',\n  POSTS: '/react-blog/posts/',\n  LOGIN: '/react-blog/login/',\n}\n\nexport const privateRoutes = [\n  {path: routeNames.POSTS, component: Posts, exact: true},\n  {path: `${routeNames.POSTS}:id`, component: PostIdPage, exact: true},\n  {path: routeNames.ABOUT, component: About, exact: false},\n];\n\nexport const publicRoutes = [\n  {path: routeNames.LOGIN, component: Login, exact: true},\n];\n","import React, {useState, useEffect, useContext, useRef} from 'react';\n\nimport {PostHeader, PostForm, PostList} from '../components';\nimport {BasicModal, Loader, BasicButton, Pagination, BasicFooter} from '../components/UI';\n\nimport PostService from '../API';\nimport {getPageCount} from '../utils';\nimport {useFetching, usePosts, useObserver} from '../hooks';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({sort: '', query: ''});\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const lastElem = useRef();\n\n  // Получаем данные от запроса по API\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    // setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  // useObserver(lastElem, page < totalPages, isPostsLoading, () => {\n  //   setPage(page + 1);\n  // });\n\n  // useEffect(() => {\n  //   var options = {\n  //     root: document,\n  //   }\n  //   var callback = function(entries, observer) {\n  //     if (isPostsLoading) return;\n  //     if (observer.current) observer.current.disconnect();\n  //     /* Content excerpted, show below */\n  //     if (entries[0].isIntersecting && page < totalPages) {\n  //       setPage(page + 1);\n  //       console.log(page);\n  //     }\n  //   };\n  //   observer.current = new IntersectionObserver(callback, options);\n  //   observer.current.observe(lastElem.current);\n  // }, [isPostsLoading]);\n\n  // Выводим посты при загрузке страницы\n  useEffect(() => {\n    fetchPosts();\n  }, [page, limit]);\n\n  // Принимает новый созданный пост. Пересоздаёт массив с добавленным новым постом.\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  // Принимает пост. Пересоздаёт массив с удалённым постом.\n  const removePost = (post) => {\n    setPosts(posts.filter(item => item.id !== post.id));\n  }\n\n  // Изменение номера страницы\n  const changePage = (pageNumber) => {\n    setPage(pageNumber);\n  }\n\n  return (\n    <div className=\"page\">\n      <BasicModal visible={modal} setVisible={setModal}>\n        <PostForm createPost={createPost} visible={modal} />\n      </BasicModal>\n\n      <PostHeader\n        filter={filter}\n        setFilter={setFilter}\n        setModal={setModal}\n      />\n\n      {postError &&\n        <h2 className=\"page__content-title container\">Произошла ошибка {postError}</h2>\n      }\n\n      {isPostsLoading ?\n        <div className=\"post-list container\"><Loader /></div>\n        :\n        <PostList\n            posts={sortedAndSearchedPosts}\n            title=\"Список постов\"\n            removePost={removePost}\n            filter={filter}\n            setFilter={setFilter}\n            limit={limit}\n            setLimit={setLimit}\n          />\n        }\n        {/*<div ref={lastElem} style={{height: 20, background: 'yellow'}} />*/}\n\n      <Pagination\n        className=\"container\"\n        totalPages={totalPages}\n        page={page}\n        changePage={changePage}\n      />\n\n      <BasicFooter />\n    </div>\n  );\n}\n\nexport default Posts;\n\n","import Navbar from './Navbar.jsx';\n\nexport default Navbar;\n","import React, {useContext} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nimport classes from './Navbar.module.css';\nimport {BasicButton} from 'components/UI';\nimport {AuthContext} from 'context';\nimport {routeNames} from 'router';\n\nconst Navbar = (props) => {\n  const className = props.className ? props.className : '';\n  const {isAuth, setIsAuth, username} = useContext(AuthContext);\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.removeItem('blogAuth');\n    localStorage.removeItem('blogUsername');\n  }\n\n  return (\n    <div className={ `${classes.navbar} ${className}` }>\n    <Link to={routeNames.POSTS} className={classes.navbar__link}>Посты</Link>\n      <Link to={routeNames.ABOUT} className={classes.navbar__link}>О блоге</Link>\n\n      <BasicButton\n        className={classes.logout__btn}\n        onClick={logout}\n      >\n        Выйти\n      </BasicButton>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\n\nimport BasicButton from '../BasicButton';\nimport {getPageArray} from '../../../utils';\n\nimport classes from './Pagination.module.css';\n\nconst Pagination = ({totalPages, page, changePage, ...props}) => {\n  const className = props.className ? props.className : '';\n  const pagesArray = getPageArray(totalPages);\n\n  return (\n    <div className={ `${classes.pagination} ${className}` }>\n      {pagesArray.map(pageNumber =>\n        <BasicButton\n          key={pageNumber}\n          className={\n            pageNumber === page\n              ? `${classes.pagination__btn} ${classes.active}`\n              : classes.pagination__btn\n            }\n          onClick={() => changePage(pageNumber)}\n        >\n          {pageNumber}\n        </BasicButton>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, {useContext} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {Loader} from './UI';\nimport {About, Posts, ErrorPage, PostIdPage} from 'pages';\nimport {privateRoutes, publicRoutes, routeNames} from 'router';\nimport {AuthContext} from 'context';\n\nconst AppRouter = (props) => {\n  const {isAuth, isLoading} = useContext(AuthContext);\n\n  if (isLoading) {\n    return <div className=\"post-list container\"><Loader /></div>\n  }\n\n  return (\n    isAuth\n      ?\n      <Switch>\n        {privateRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to={routeNames.ABOUT} />\n      </Switch>\n      :\n      <Switch>\n        {publicRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to={routeNames.LOGIN} />\n      </Switch>\n\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport BasicButton from './UI/BasicButton';\n\nconst Post = ({number, removePost, post}) => {\n  const {id, title, body} = post;\n  const router = useHistory();\n\n  return (\n    <div className=\"post\">\n      <div className=\"post__content\" onClick={() => router.push(`/react-blog/posts/${id}`)}>\n        <h3 className=\"post__title\">{id} {title}</h3>\n        <div>{body}</div>\n      </div>\n      <div className=\"post__btns\">\n        <BasicButton onClick={() => removePost(post)}>Удалить пост</BasicButton>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Post;\n","import React, {useState, useMemo} from 'react';\n\nimport BasicButton from './UI/BasicButton';\nimport BasicInput from './UI/BasicInput';\n\nconst PostForm = ({createPost, visible}) => {\n  const [post, setPost] = useState({title: '', body: ''});\n\n  // Очищаем поля формы, когда она становится невидимой\n  useMemo(() => {\n    if (!visible) {\n      setPost({...post, title: '', body: ''});\n    }\n  }, [visible])\n\n  // Добавить новый пост\n  const addNewPost = (event) => {\n    event.preventDefault();\n    if (!post.title || !post.body) return;\n\n    const newPost = {\n      ...post,\n      id: Date.now(),\n    };\n\n    // Добавляем новый пост в массив с постами\n    createPost(newPost);\n\n    // Очистка полей формы после создания поста\n    // setPost({...post, title: '', body: ''});\n  };\n\n  return (\n    <form className=\"post-form\">\n      <h2 className=\"post-form__title\">Добавить новый пост</h2>\n      <BasicInput\n        type=\"text\"\n        className=\"post-form__input\"\n        placeholder=\"Введите название поста\"\n        value={post.title}\n        onChange={ event => setPost({...post, title: event.target.value}) }\n        required={true}\n      />\n      <BasicInput\n        type=\"text\"\n        className=\"post-form__input\"\n        placeholder=\"Введите описание поста\"\n        value={post.body}\n        onChange={ event => setPost({...post, body: event.target.value}) }\n        required={true}\n      />\n      <div className=\"post-form__btns\">\n        <BasicButton onClick={addNewPost}>Добавить пост</BasicButton>\n      </div>\n    </form>\n  );\n};\n\nexport default PostForm;\n","import React, {useContext} from 'react';\n\nimport {BasicHeader, Navbar, BasicButton, BasicInput} from './UI';\n\nconst PostHeader = ({filter, setFilter, setModal}) => {\n\n  return (\n    <BasicHeader>\n      <h1 className=\"page__header-title\">Посты</h1>\n      <Navbar />\n\n      <div className=\"page__header-content\">\n        <BasicButton\n          className=\"add-post__btn\"\n          onClick={() => setModal(true)}\n        >\n          Создать пост\n        </BasicButton>\n\n        <BasicInput\n          type=\"text\"\n          className=\"page__header-search\"\n          placeholder=\"Поиск...\"\n          value={filter.query}\n          onChange={ event => setFilter({...filter, query: event.target.value}) }\n        />\n      </div>\n\n    </BasicHeader>\n  );\n};\n\nexport default PostHeader;\n","import React from 'react';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Post from './Post.jsx';\nimport {BasicSelect} from './UI';\n\nconst PostList = ({posts, title, removePost, filter, setFilter, limit, setLimit}) => {\n  if (!posts.length) {\n    return (\n      <div className=\"page__content post-list container\">\n        <h2 className=\"page__content-title\">Постов не найдено</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page__content post-list container\">\n      <div className=\"post-list__header\">\n        <h2 className=\"post-list__title\">{title}</h2>\n\n        <div className=\"post-list__selects\">\n          <BasicSelect\n            defaultValue=\"Кол-во постов\"\n            value={limit}\n            onChange={value => setLimit(value)}\n            options={[\n              {value: 5, name: '5'},\n              {value: 10, name: '10'},\n              {value: 15, name: '15'},\n              {value: 20, name: '20'},\n              {value: -1, name: 'Все посты'},\n            ]}\n          />\n          <BasicSelect\n            defaultValue=\"Сортировка\"\n            value={filter.sort}\n            onChange={ selectedSort => {setFilter({...filter, sort: selectedSort})} }\n            options={[\n              {value: 'title', name: 'По названию'},\n              {value: 'body', name: 'По описанию'},\n            ]}\n          />\n        </div>\n\n      </div>\n\n      <TransitionGroup>\n        {posts.map((post, index) =>\n          <CSSTransition\n            key={post.id}\n            timeout={100}\n            classNames=\"post\"\n          >\n            <Post number={index+1} post={post} removePost={removePost} />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n\n    </div>\n  );\n\n};\n\nexport default PostList;\n","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {AppRouter} from './components';\nimport {AuthContext} from './context';\n\nimport './styles/App.css';\n\nconst App = () => {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    if (localStorage.getItem('blogAuth')) {\n      setIsAuth(true);\n      setUsername(localStorage.getItem('blogUsername'));\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading,\n      username,\n    }}>\n\n      <BrowserRouter>\n        <AppRouter />\n      </BrowserRouter>\n\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}